{
	"id": "fapi",
	"realm": "fapi",
	"notBefore": 0,
	"defaultSignatureAlgorithm": "RS256",
	"revokeRefreshToken": false,
	"refreshTokenMaxReuse": 0,
	"accessTokenLifespan": 300,
	"accessTokenLifespanForImplicitFlow": 900,
	"ssoSessionIdleTimeout": 1800,
	"ssoSessionMaxLifespan": 36000,
	"ssoSessionIdleTimeoutRememberMe": 0,
	"ssoSessionMaxLifespanRememberMe": 0,
	"offlineSessionIdleTimeout": 2592000,
	"offlineSessionMaxLifespanEnabled": false,
	"offlineSessionMaxLifespan": 5184000,
	"clientSessionIdleTimeout": 0,
	"clientSessionMaxLifespan": 0,
	"clientOfflineSessionIdleTimeout": 0,
	"clientOfflineSessionMaxLifespan": 0,
	"accessCodeLifespan": 60,
	"accessCodeLifespanUserAction": 300,
	"accessCodeLifespanLogin": 1800,
	"actionTokenGeneratedByAdminLifespan": 43200,
	"actionTokenGeneratedByUserLifespan": 300,
	"oauth2DeviceCodeLifespan": 600,
	"oauth2DevicePollingInterval": 5,
	"enabled": true,
	"sslRequired": "external",
	"registrationAllowed": false,
	"registrationEmailAsUsername": false,
	"rememberMe": false,
	"verifyEmail": false,
	"loginWithEmailAllowed": true,
	"duplicateEmailsAllowed": false,
	"resetPasswordAllowed": false,
	"editUsernameAllowed": false,
	"bruteForceProtected": false,
	"permanentLockout": false,
	"maxFailureWaitSeconds": 900,
	"minimumQuickLoginWaitSeconds": 60,
	"waitIncrementSeconds": 60,
	"quickLoginCheckMilliSeconds": 1000,
	"maxDeltaTimeSeconds": 43200,
	"failureFactor": 30,
	"roles": {
		"realm": [
			{
				"id": "fb05b8f4-7f7a-4afb-aeb1-5785fc38e87d",
				"name": "loki-user",
				"description": "Loki user permissions",
				"composite": false,
				"clientRole": false,
				"containerId": "fapi",
				"attributes": {}
			},
			{
				"id": "51494f3c-a74e-4b83-a5ee-89ef62cb9e3b",
				"name": "hulk-user",
				"description": "Hulk user permissions",
				"composite": true,
				"composites": {
					"client": {
						"hulk": ["user"]
					}
				},
				"clientRole": false,
				"containerId": "fapi",
				"attributes": {}
			},
			{
				"id": "ce0ca629-5aef-46e2-b693-b721ed25c3cd",
				"name": "loki-admin",
				"description": "Loki admin permissions",
				"composite": false,
				"clientRole": false,
				"containerId": "fapi",
				"attributes": {}
			},
			{
				"id": "76431de5-059d-4ab4-b226-1d4a290d816d",
				"name": "hulk-admin",
				"description": "Hulk admin permissions",
				"composite": true,
				"composites": {
					"client": {
						"hulk": ["admin"]
					}
				},
				"clientRole": false,
				"containerId": "fapi",
				"attributes": {}
			},
			{
				"id": "b12c8341-3d1b-4505-9424-c0250f7f93a7",
				"name": "offline_access",
				"description": "${role_offline-access}",
				"composite": false,
				"clientRole": false,
				"containerId": "fapi",
				"attributes": {}
			},
			{
				"id": "d5f54518-f4a5-45e3-9a8c-202df4dbb47f",
				"name": "default-roles-fapi",
				"description": "${role_default-roles}",
				"composite": true,
				"composites": {
					"realm": ["offline_access", "uma_authorization"],
					"client": {
						"account": ["manage-account", "view-profile"]
					}
				},
				"clientRole": false,
				"containerId": "fapi",
				"attributes": {}
			},
			{
				"id": "00d57c6e-4e29-49a6-a408-edf109c488a9",
				"name": "uma_authorization",
				"description": "${role_uma_authorization}",
				"composite": false,
				"clientRole": false,
				"containerId": "fapi",
				"attributes": {}
			},
			{
				"id": "c9f328ee-56be-4943-a558-0d4faa7d715a",
				"name": "fapi-client",
				"description": "Enforces FAPI policies for clients",
				"composite": false,
				"clientRole": false,
				"containerId": "fapi",
				"attributes": {}
			},
			{
				"id": "9ffe6935-6574-407c-b9d5-69e5473f788f",
				"name": "fapi-user",
				"description": "Regular FAPI users",
				"composite": false,
				"clientRole": false,
				"containerId": "fapi",
				"attributes": {}
			}
		],
		"client": {
			"realm-management": [
				{
					"id": "e3a69178-460b-48ce-918c-a360052d7d61",
					"name": "manage-realm",
					"description": "${role_manage-realm}",
					"composite": false,
					"clientRole": true,
					"containerId": "e88a6d04-7545-4049-bfde-26729867fb71",
					"attributes": {}
				},
				{
					"id": "60a2578a-2ad8-42b6-a17e-e1cd9330e4d9",
					"name": "realm-admin",
					"description": "${role_realm-admin}",
					"composite": true,
					"composites": {
						"client": {
							"realm-management": [
								"manage-realm",
								"impersonation",
								"manage-users",
								"query-clients",
								"manage-events",
								"query-users",
								"view-identity-providers",
								"manage-authorization",
								"query-groups",
								"query-realms",
								"view-authorization",
								"manage-clients",
								"create-client",
								"view-realm",
								"manage-identity-providers",
								"view-clients",
								"view-users",
								"view-events"
							]
						}
					},
					"clientRole": true,
					"containerId": "e88a6d04-7545-4049-bfde-26729867fb71",
					"attributes": {}
				},
				{
					"id": "99e78e33-9ee4-4202-9d0f-049d17995e2c",
					"name": "impersonation",
					"description": "${role_impersonation}",
					"composite": false,
					"clientRole": true,
					"containerId": "e88a6d04-7545-4049-bfde-26729867fb71",
					"attributes": {}
				},
				{
					"id": "5daf66cc-de27-4970-a67b-bb3cc49e0bab",
					"name": "manage-users",
					"description": "${role_manage-users}",
					"composite": false,
					"clientRole": true,
					"containerId": "e88a6d04-7545-4049-bfde-26729867fb71",
					"attributes": {}
				},
				{
					"id": "82451c49-c76b-4496-9faf-23d5989b6cec",
					"name": "query-clients",
					"description": "${role_query-clients}",
					"composite": false,
					"clientRole": true,
					"containerId": "e88a6d04-7545-4049-bfde-26729867fb71",
					"attributes": {}
				},
				{
					"id": "80686be1-8f21-40b5-b222-1a2400126cea",
					"name": "manage-events",
					"description": "${role_manage-events}",
					"composite": false,
					"clientRole": true,
					"containerId": "e88a6d04-7545-4049-bfde-26729867fb71",
					"attributes": {}
				},
				{
					"id": "2b140b91-23b2-4bd6-8e52-0d197579c94a",
					"name": "query-users",
					"description": "${role_query-users}",
					"composite": false,
					"clientRole": true,
					"containerId": "e88a6d04-7545-4049-bfde-26729867fb71",
					"attributes": {}
				},
				{
					"id": "ef267bba-4255-4bf6-89c6-8d3fb9bf8010",
					"name": "view-identity-providers",
					"description": "${role_view-identity-providers}",
					"composite": false,
					"clientRole": true,
					"containerId": "e88a6d04-7545-4049-bfde-26729867fb71",
					"attributes": {}
				},
				{
					"id": "b8bc69c7-28d9-4904-8227-bc6efef69a1e",
					"name": "manage-authorization",
					"description": "${role_manage-authorization}",
					"composite": false,
					"clientRole": true,
					"containerId": "e88a6d04-7545-4049-bfde-26729867fb71",
					"attributes": {}
				},
				{
					"id": "6e4ed53f-4240-40a2-bbd1-9e1bbd92cb46",
					"name": "query-groups",
					"description": "${role_query-groups}",
					"composite": false,
					"clientRole": true,
					"containerId": "e88a6d04-7545-4049-bfde-26729867fb71",
					"attributes": {}
				},
				{
					"id": "c996d27a-d2a3-40fa-aaf1-c0f3daf4adb5",
					"name": "query-realms",
					"description": "${role_query-realms}",
					"composite": false,
					"clientRole": true,
					"containerId": "e88a6d04-7545-4049-bfde-26729867fb71",
					"attributes": {}
				},
				{
					"id": "a8544937-e909-4982-ae93-24f7a8842f41",
					"name": "view-authorization",
					"description": "${role_view-authorization}",
					"composite": false,
					"clientRole": true,
					"containerId": "e88a6d04-7545-4049-bfde-26729867fb71",
					"attributes": {}
				},
				{
					"id": "4b6c8f9b-d103-468f-b474-901cee71947f",
					"name": "manage-clients",
					"description": "${role_manage-clients}",
					"composite": false,
					"clientRole": true,
					"containerId": "e88a6d04-7545-4049-bfde-26729867fb71",
					"attributes": {}
				},
				{
					"id": "e6a3a257-bf67-4b06-9c87-649a3395e26c",
					"name": "create-client",
					"description": "${role_create-client}",
					"composite": false,
					"clientRole": true,
					"containerId": "e88a6d04-7545-4049-bfde-26729867fb71",
					"attributes": {}
				},
				{
					"id": "2be543a4-8f0f-41d5-a1e1-8edb2eea0ce7",
					"name": "view-realm",
					"description": "${role_view-realm}",
					"composite": false,
					"clientRole": true,
					"containerId": "e88a6d04-7545-4049-bfde-26729867fb71",
					"attributes": {}
				},
				{
					"id": "f0011d30-c93e-44df-a276-31251c991019",
					"name": "manage-identity-providers",
					"description": "${role_manage-identity-providers}",
					"composite": false,
					"clientRole": true,
					"containerId": "e88a6d04-7545-4049-bfde-26729867fb71",
					"attributes": {}
				},
				{
					"id": "9b86b690-3e56-492b-963f-eb8b4da58fe6",
					"name": "view-clients",
					"description": "${role_view-clients}",
					"composite": true,
					"composites": {
						"client": {
							"realm-management": ["query-clients"]
						}
					},
					"clientRole": true,
					"containerId": "e88a6d04-7545-4049-bfde-26729867fb71",
					"attributes": {}
				},
				{
					"id": "dcec4d45-905a-49ea-9f76-84c38619e19c",
					"name": "view-users",
					"description": "${role_view-users}",
					"composite": true,
					"composites": {
						"client": {
							"realm-management": ["query-users", "query-groups"]
						}
					},
					"clientRole": true,
					"containerId": "e88a6d04-7545-4049-bfde-26729867fb71",
					"attributes": {}
				},
				{
					"id": "4529ec6c-91e3-4629-a0d5-b6924175cd81",
					"name": "view-events",
					"description": "${role_view-events}",
					"composite": false,
					"clientRole": true,
					"containerId": "e88a6d04-7545-4049-bfde-26729867fb71",
					"attributes": {}
				}
			],
			"security-admin-console": [],
			"admin-cli": [],
			"account-console": [],
			"broker": [
				{
					"id": "9ce1773f-d071-4e54-87a4-f80a4827be7f",
					"name": "read-token",
					"description": "${role_read-token}",
					"composite": false,
					"clientRole": true,
					"containerId": "1083ce65-3244-4356-a167-680e0d15f05e",
					"attributes": {}
				}
			],
			"hulk": [
				{
					"id": "dc984c49-65d6-4a0e-ad3b-4764908d7572",
					"name": "uma_protection",
					"composite": false,
					"clientRole": true,
					"containerId": "554e7936-b2c4-47bb-ac59-1bb8597fa35f",
					"attributes": {}
				},
				{
					"id": "5c0368f8-beae-4254-8059-7e8bbe1d5112",
					"name": "admin",
					"description": "To authorize admins",
					"composite": false,
					"clientRole": true,
					"containerId": "554e7936-b2c4-47bb-ac59-1bb8597fa35f",
					"attributes": {}
				},
				{
					"id": "7f95d0ef-db7e-4af8-836c-b138ee2d5eba",
					"name": "user",
					"description": "To authorize users",
					"composite": false,
					"clientRole": true,
					"containerId": "554e7936-b2c4-47bb-ac59-1bb8597fa35f",
					"attributes": {}
				}
			],
			"account": [
				{
					"id": "1be7e0a7-a5f3-4423-9065-5502d99c676f",
					"name": "delete-account",
					"description": "${role_delete-account}",
					"composite": false,
					"clientRole": true,
					"containerId": "8facff1c-ee1b-4775-955d-d7926791ca5d",
					"attributes": {}
				},
				{
					"id": "d888aff7-fecd-4d48-bd7d-ceeebd3df0fc",
					"name": "view-applications",
					"description": "${role_view-applications}",
					"composite": false,
					"clientRole": true,
					"containerId": "8facff1c-ee1b-4775-955d-d7926791ca5d",
					"attributes": {}
				},
				{
					"id": "fd5241f6-539c-46ed-9552-76ccc8d29e82",
					"name": "manage-consent",
					"description": "${role_manage-consent}",
					"composite": true,
					"composites": {
						"client": {
							"account": ["view-consent"]
						}
					},
					"clientRole": true,
					"containerId": "8facff1c-ee1b-4775-955d-d7926791ca5d",
					"attributes": {}
				},
				{
					"id": "6dabfd70-5f61-4f50-8aa0-a33fa1fa196a",
					"name": "view-consent",
					"description": "${role_view-consent}",
					"composite": false,
					"clientRole": true,
					"containerId": "8facff1c-ee1b-4775-955d-d7926791ca5d",
					"attributes": {}
				},
				{
					"id": "acfe6be7-5e8f-4004-925f-ec842af2a13b",
					"name": "manage-account",
					"description": "${role_manage-account}",
					"composite": true,
					"composites": {
						"client": {
							"account": ["manage-account-links"]
						}
					},
					"clientRole": true,
					"containerId": "8facff1c-ee1b-4775-955d-d7926791ca5d",
					"attributes": {}
				},
				{
					"id": "d6165d5b-11e7-41bb-a847-502028bf3a5c",
					"name": "view-profile",
					"description": "${role_view-profile}",
					"composite": false,
					"clientRole": true,
					"containerId": "8facff1c-ee1b-4775-955d-d7926791ca5d",
					"attributes": {}
				},
				{
					"id": "614eda54-9ba7-4ff4-a3c7-666da4ff2ce5",
					"name": "manage-account-links",
					"description": "${role_manage-account-links}",
					"composite": false,
					"clientRole": true,
					"containerId": "8facff1c-ee1b-4775-955d-d7926791ca5d",
					"attributes": {}
				}
			]
		}
	},
	"groups": [],
	"defaultRole": {
		"id": "d5f54518-f4a5-45e3-9a8c-202df4dbb47f",
		"name": "default-roles-fapi",
		"description": "${role_default-roles}",
		"composite": true,
		"clientRole": false,
		"containerId": "fapi"
	},
	"requiredCredentials": ["password"],
	"otpPolicyType": "totp",
	"otpPolicyAlgorithm": "HmacSHA1",
	"otpPolicyInitialCounter": 0,
	"otpPolicyDigits": 6,
	"otpPolicyLookAheadWindow": 1,
	"otpPolicyPeriod": 30,
	"otpSupportedApplications": ["FreeOTP", "Google Authenticator"],
	"webAuthnPolicyRpEntityName": "keycloak",
	"webAuthnPolicySignatureAlgorithms": ["ES256"],
	"webAuthnPolicyRpId": "",
	"webAuthnPolicyAttestationConveyancePreference": "not specified",
	"webAuthnPolicyAuthenticatorAttachment": "not specified",
	"webAuthnPolicyRequireResidentKey": "not specified",
	"webAuthnPolicyUserVerificationRequirement": "not specified",
	"webAuthnPolicyCreateTimeout": 0,
	"webAuthnPolicyAvoidSameAuthenticatorRegister": false,
	"webAuthnPolicyAcceptableAaguids": [],
	"webAuthnPolicyPasswordlessRpEntityName": "keycloak",
	"webAuthnPolicyPasswordlessSignatureAlgorithms": ["ES256"],
	"webAuthnPolicyPasswordlessRpId": "",
	"webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
	"webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
	"webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
	"webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
	"webAuthnPolicyPasswordlessCreateTimeout": 0,
	"webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
	"webAuthnPolicyPasswordlessAcceptableAaguids": [],
	"users": [
		{
			"id": "c8479abc-d058-44e9-a788-f69ef1f2b25c",
			"createdTimestamp": 1658848019216,
			"username": "service-account-hulk",
			"enabled": true,
			"totp": false,
			"emailVerified": false,
			"serviceAccountClientId": "hulk",
			"disableableCredentialTypes": [],
			"requiredActions": [],
			"realmRoles": ["default-roles-fapi"],
			"clientRoles": {
				"realm-management": ["realm-admin"],
				"hulk": ["uma_protection"]
			},
			"notBefore": 0,
			"groups": []
		}
	],
	"scopeMappings": [
		{
			"clientScope": "offline_access",
			"roles": ["offline_access"]
		}
	],
	"clientScopeMappings": {
		"account": [
			{
				"client": "account-console",
				"roles": ["manage-account"]
			}
		]
	},
	"clients": [
		{
			"id": "8facff1c-ee1b-4775-955d-d7926791ca5d",
			"clientId": "account",
			"name": "${client_account}",
			"rootUrl": "${authBaseUrl}",
			"baseUrl": "/realms/fapi/account/",
			"surrogateAuthRequired": false,
			"enabled": true,
			"alwaysDisplayInConsole": false,
			"clientAuthenticatorType": "client-secret",
			"redirectUris": ["/realms/fapi/account/*"],
			"webOrigins": [],
			"notBefore": 0,
			"bearerOnly": false,
			"consentRequired": false,
			"standardFlowEnabled": true,
			"implicitFlowEnabled": false,
			"directAccessGrantsEnabled": false,
			"serviceAccountsEnabled": false,
			"publicClient": true,
			"frontchannelLogout": false,
			"protocol": "openid-connect",
			"attributes": {},
			"authenticationFlowBindingOverrides": {},
			"fullScopeAllowed": false,
			"nodeReRegistrationTimeout": 0,
			"defaultClientScopes": [
				"web-origins",
				"acr",
				"profile",
				"roles",
				"email"
			],
			"optionalClientScopes": [
				"address",
				"phone",
				"offline_access",
				"microprofile-jwt"
			]
		},
		{
			"id": "29cfa375-7add-47dc-a539-e0497074cae9",
			"clientId": "account-console",
			"name": "${client_account-console}",
			"rootUrl": "${authBaseUrl}",
			"baseUrl": "/realms/fapi/account/",
			"surrogateAuthRequired": false,
			"enabled": true,
			"alwaysDisplayInConsole": false,
			"clientAuthenticatorType": "client-secret",
			"redirectUris": ["/realms/fapi/account/*"],
			"webOrigins": [],
			"notBefore": 0,
			"bearerOnly": false,
			"consentRequired": false,
			"standardFlowEnabled": true,
			"implicitFlowEnabled": false,
			"directAccessGrantsEnabled": false,
			"serviceAccountsEnabled": false,
			"publicClient": true,
			"frontchannelLogout": false,
			"protocol": "openid-connect",
			"attributes": {
				"pkce.code.challenge.method": "S256"
			},
			"authenticationFlowBindingOverrides": {},
			"fullScopeAllowed": false,
			"nodeReRegistrationTimeout": 0,
			"protocolMappers": [
				{
					"id": "4be38e89-ca69-492f-9534-e73e5725972e",
					"name": "audience resolve",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-audience-resolve-mapper",
					"consentRequired": false,
					"config": {}
				}
			],
			"defaultClientScopes": [
				"web-origins",
				"acr",
				"profile",
				"roles",
				"email"
			],
			"optionalClientScopes": [
				"address",
				"phone",
				"offline_access",
				"microprofile-jwt"
			]
		},
		{
			"id": "2b87a272-2c1b-441d-a768-e87bf43e1290",
			"clientId": "admin-cli",
			"name": "${client_admin-cli}",
			"surrogateAuthRequired": false,
			"enabled": true,
			"alwaysDisplayInConsole": false,
			"clientAuthenticatorType": "client-secret",
			"redirectUris": [],
			"webOrigins": [],
			"notBefore": 0,
			"bearerOnly": false,
			"consentRequired": false,
			"standardFlowEnabled": false,
			"implicitFlowEnabled": false,
			"directAccessGrantsEnabled": true,
			"serviceAccountsEnabled": false,
			"publicClient": true,
			"frontchannelLogout": false,
			"protocol": "openid-connect",
			"attributes": {},
			"authenticationFlowBindingOverrides": {},
			"fullScopeAllowed": false,
			"nodeReRegistrationTimeout": 0,
			"defaultClientScopes": [
				"web-origins",
				"acr",
				"profile",
				"roles",
				"email"
			],
			"optionalClientScopes": [
				"address",
				"phone",
				"offline_access",
				"microprofile-jwt"
			]
		},
		{
			"id": "1083ce65-3244-4356-a167-680e0d15f05e",
			"clientId": "broker",
			"name": "${client_broker}",
			"surrogateAuthRequired": false,
			"enabled": true,
			"alwaysDisplayInConsole": false,
			"clientAuthenticatorType": "client-secret",
			"redirectUris": [],
			"webOrigins": [],
			"notBefore": 0,
			"bearerOnly": true,
			"consentRequired": false,
			"standardFlowEnabled": true,
			"implicitFlowEnabled": false,
			"directAccessGrantsEnabled": false,
			"serviceAccountsEnabled": false,
			"publicClient": false,
			"frontchannelLogout": false,
			"protocol": "openid-connect",
			"attributes": {},
			"authenticationFlowBindingOverrides": {},
			"fullScopeAllowed": false,
			"nodeReRegistrationTimeout": 0,
			"defaultClientScopes": [
				"web-origins",
				"acr",
				"profile",
				"roles",
				"email"
			],
			"optionalClientScopes": [
				"address",
				"phone",
				"offline_access",
				"microprofile-jwt"
			]
		},
		{
			"id": "554e7936-b2c4-47bb-ac59-1bb8597fa35f",
			"clientId": "hulk",
			"rootUrl": "http://localhost:3000",
			"adminUrl": "http://localhost:3000",
			"baseUrl": "/",
			"surrogateAuthRequired": false,
			"enabled": true,
			"alwaysDisplayInConsole": false,
			"clientAuthenticatorType": "client-secret",
			"secret": "super_secret_hulk_client_secret",
			"redirectUris": ["http://localhost:3000/*"],
			"webOrigins": ["http://localhost:3000"],
			"notBefore": 0,
			"bearerOnly": false,
			"consentRequired": false,
			"standardFlowEnabled": true,
			"implicitFlowEnabled": false,
			"directAccessGrantsEnabled": true,
			"serviceAccountsEnabled": true,
			"authorizationServicesEnabled": true,
			"publicClient": false,
			"frontchannelLogout": false,
			"protocol": "openid-connect",
			"attributes": {
				"saml.force.post.binding": "false",
				"saml.multivalued.roles": "false",
				"frontchannel.logout.session.required": "false",
				"oauth2.device.authorization.grant.enabled": "false",
				"backchannel.logout.revoke.offline.tokens": "false",
				"saml.server.signature.keyinfo.ext": "false",
				"use.refresh.tokens": "true",
				"oidc.ciba.grant.enabled": "false",
				"backchannel.logout.session.required": "true",
				"client_credentials.use_refresh_token": "false",
				"require.pushed.authorization.requests": "false",
				"saml.client.signature": "false",
				"saml.allow.ecp.flow": "false",
				"id.token.as.detached.signature": "false",
				"saml.assertion.signature": "false",
				"client.secret.creation.time": "1658848019",
				"saml.encrypt": "false",
				"saml.server.signature": "false",
				"exclude.session.state.from.auth.response": "false",
				"saml.artifact.binding": "false",
				"saml_force_name_id_format": "false",
				"acr.loa.map": "{}",
				"tls.client.certificate.bound.access.tokens": "false",
				"saml.authnstatement": "false",
				"display.on.consent.screen": "false",
				"token.response.type.bearer.lower-case": "false",
				"saml.onetimeuse.condition": "false"
			},
			"authenticationFlowBindingOverrides": {},
			"fullScopeAllowed": true,
			"nodeReRegistrationTimeout": -1,
			"protocolMappers": [
				{
					"id": "049d7651-76fe-4a4c-90b7-1f23a10d85e2",
					"name": "Client IP Address",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usersessionmodel-note-mapper",
					"consentRequired": false,
					"config": {
						"user.session.note": "clientAddress",
						"userinfo.token.claim": "true",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "clientAddress",
						"jsonType.label": "String"
					}
				},
				{
					"id": "310bc5de-b4e8-4421-a2b8-725fbb2716d3",
					"name": "Client Host",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usersessionmodel-note-mapper",
					"consentRequired": false,
					"config": {
						"user.session.note": "clientHost",
						"userinfo.token.claim": "true",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "clientHost",
						"jsonType.label": "String"
					}
				},
				{
					"id": "bece4243-a39f-4018-9920-e230e316a0ce",
					"name": "Client ID",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usersessionmodel-note-mapper",
					"consentRequired": false,
					"config": {
						"user.session.note": "clientId",
						"userinfo.token.claim": "true",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "clientId",
						"jsonType.label": "String"
					}
				}
			],
			"defaultClientScopes": [
				"web-origins",
				"acr",
				"profile",
				"roles",
				"email"
			],
			"optionalClientScopes": [
				"address",
				"phone",
				"offline_access",
				"microprofile-jwt"
			],
			"authorizationSettings": {
				"allowRemoteResourceManagement": true,
				"policyEnforcementMode": "ENFORCING",
				"resources": [
					{
						"name": "Default Resource",
						"type": "urn:hulk:resources:default",
						"ownerManagedAccess": false,
						"attributes": {},
						"_id": "5a93dd3e-2f20-4fbb-bd83-a1984aa54788",
						"uris": ["/*"]
					}
				],
				"policies": [
					{
						"id": "e2f3ce59-8798-4ee3-9c21-4fa9caa17d78",
						"name": "Default Policy",
						"description": "A policy that grants access only for users within this realm",
						"type": "resource",
						"logic": "POSITIVE",
						"decisionStrategy": "AFFIRMATIVE",
						"config": {
							"code": "// by default, grants any permission associated with this policy\n$evaluation.grant();\n"
						}
					},
					{
						"id": "3a049499-9331-4600-b668-e007cb6b285c",
						"name": "Default Permission",
						"description": "A permission that applies to the default resource type",
						"type": "resource",
						"logic": "POSITIVE",
						"decisionStrategy": "UNANIMOUS",
						"config": {
							"defaultResourceType": "urn:hulk:resources:default",
							"applyPolicies": "[\"Default Policy\"]"
						}
					}
				],
				"scopes": [],
				"decisionStrategy": "UNANIMOUS"
			}
		},
		{
			"id": "e88a6d04-7545-4049-bfde-26729867fb71",
			"clientId": "realm-management",
			"name": "${client_realm-management}",
			"surrogateAuthRequired": false,
			"enabled": true,
			"alwaysDisplayInConsole": false,
			"clientAuthenticatorType": "client-secret",
			"redirectUris": [],
			"webOrigins": [],
			"notBefore": 0,
			"bearerOnly": true,
			"consentRequired": false,
			"standardFlowEnabled": true,
			"implicitFlowEnabled": false,
			"directAccessGrantsEnabled": false,
			"serviceAccountsEnabled": false,
			"publicClient": false,
			"frontchannelLogout": false,
			"protocol": "openid-connect",
			"attributes": {},
			"authenticationFlowBindingOverrides": {},
			"fullScopeAllowed": false,
			"nodeReRegistrationTimeout": 0,
			"defaultClientScopes": [
				"web-origins",
				"acr",
				"profile",
				"roles",
				"email"
			],
			"optionalClientScopes": [
				"address",
				"phone",
				"offline_access",
				"microprofile-jwt"
			]
		},
		{
			"id": "43e642aa-7b39-4caa-979f-a1342076863c",
			"clientId": "security-admin-console",
			"name": "${client_security-admin-console}",
			"rootUrl": "${authAdminUrl}",
			"baseUrl": "/admin/fapi/console/",
			"surrogateAuthRequired": false,
			"enabled": true,
			"alwaysDisplayInConsole": false,
			"clientAuthenticatorType": "client-secret",
			"redirectUris": ["/admin/fapi/console/*"],
			"webOrigins": ["+"],
			"notBefore": 0,
			"bearerOnly": false,
			"consentRequired": false,
			"standardFlowEnabled": true,
			"implicitFlowEnabled": false,
			"directAccessGrantsEnabled": false,
			"serviceAccountsEnabled": false,
			"publicClient": true,
			"frontchannelLogout": false,
			"protocol": "openid-connect",
			"attributes": {
				"pkce.code.challenge.method": "S256"
			},
			"authenticationFlowBindingOverrides": {},
			"fullScopeAllowed": false,
			"nodeReRegistrationTimeout": 0,
			"protocolMappers": [
				{
					"id": "1f007278-69ae-4a93-b481-c175e12a3ddd",
					"name": "locale",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-attribute-mapper",
					"consentRequired": false,
					"config": {
						"userinfo.token.claim": "true",
						"user.attribute": "locale",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "locale",
						"jsonType.label": "String"
					}
				}
			],
			"defaultClientScopes": [
				"web-origins",
				"acr",
				"profile",
				"roles",
				"email"
			],
			"optionalClientScopes": [
				"address",
				"phone",
				"offline_access",
				"microprofile-jwt"
			]
		}
	],
	"clientScopes": [
		{
			"id": "d691ba85-9e95-464b-bd71-fb2e8b08097e",
			"name": "microprofile-jwt",
			"description": "Microprofile - JWT built-in scope",
			"protocol": "openid-connect",
			"attributes": {
				"include.in.token.scope": "true",
				"display.on.consent.screen": "false"
			},
			"protocolMappers": [
				{
					"id": "173fd35c-43ed-4a15-aca2-fcf559d7d3bd",
					"name": "groups",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-realm-role-mapper",
					"consentRequired": false,
					"config": {
						"multivalued": "true",
						"userinfo.token.claim": "true",
						"user.attribute": "foo",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "groups",
						"jsonType.label": "String"
					}
				},
				{
					"id": "f152cac0-3565-4e94-87d6-8ddb9bb8a641",
					"name": "upn",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-property-mapper",
					"consentRequired": false,
					"config": {
						"userinfo.token.claim": "true",
						"user.attribute": "username",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "upn",
						"jsonType.label": "String"
					}
				}
			]
		},
		{
			"id": "dfeeadde-1e25-41df-8cc9-4bad2887f4b2",
			"name": "role_list",
			"description": "SAML role list",
			"protocol": "saml",
			"attributes": {
				"consent.screen.text": "${samlRoleListScopeConsentText}",
				"display.on.consent.screen": "true"
			},
			"protocolMappers": [
				{
					"id": "d208580e-5ed2-4755-920e-45551e5b13d9",
					"name": "role list",
					"protocol": "saml",
					"protocolMapper": "saml-role-list-mapper",
					"consentRequired": false,
					"config": {
						"single": "false",
						"attribute.nameformat": "Basic",
						"attribute.name": "Role"
					}
				}
			]
		},
		{
			"id": "2fa4e4f0-4aab-4898-b724-b89eab15e259",
			"name": "phone",
			"description": "OpenID Connect built-in scope: phone",
			"protocol": "openid-connect",
			"attributes": {
				"include.in.token.scope": "true",
				"display.on.consent.screen": "true",
				"consent.screen.text": "${phoneScopeConsentText}"
			},
			"protocolMappers": [
				{
					"id": "72153e17-5b4b-4bb9-8a3a-2c916171fa8e",
					"name": "phone number verified",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-attribute-mapper",
					"consentRequired": false,
					"config": {
						"userinfo.token.claim": "true",
						"user.attribute": "phoneNumberVerified",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "phone_number_verified",
						"jsonType.label": "boolean"
					}
				},
				{
					"id": "ce7c11ff-6034-4646-9383-4098ce24345e",
					"name": "phone number",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-attribute-mapper",
					"consentRequired": false,
					"config": {
						"userinfo.token.claim": "true",
						"user.attribute": "phoneNumber",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "phone_number",
						"jsonType.label": "String"
					}
				}
			]
		},
		{
			"id": "501ac3db-d8c5-489e-b507-daeb8c20c74e",
			"name": "profile",
			"description": "OpenID Connect built-in scope: profile",
			"protocol": "openid-connect",
			"attributes": {
				"include.in.token.scope": "true",
				"display.on.consent.screen": "true",
				"consent.screen.text": "${profileScopeConsentText}"
			},
			"protocolMappers": [
				{
					"id": "b50b6842-a0d8-4e48-b210-eece70febb10",
					"name": "locale",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-attribute-mapper",
					"consentRequired": false,
					"config": {
						"userinfo.token.claim": "true",
						"user.attribute": "locale",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "locale",
						"jsonType.label": "String"
					}
				},
				{
					"id": "395bd5b0-34c4-4448-ae10-20cab30fb993",
					"name": "nickname",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-attribute-mapper",
					"consentRequired": false,
					"config": {
						"userinfo.token.claim": "true",
						"user.attribute": "nickname",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "nickname",
						"jsonType.label": "String"
					}
				},
				{
					"id": "0abd65bd-1dde-451d-8f44-022165a578e4",
					"name": "username",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-property-mapper",
					"consentRequired": false,
					"config": {
						"userinfo.token.claim": "true",
						"user.attribute": "username",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "preferred_username",
						"jsonType.label": "String"
					}
				},
				{
					"id": "ce6fcad8-58c3-4e19-ba16-057b8a7c8841",
					"name": "birthdate",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-attribute-mapper",
					"consentRequired": false,
					"config": {
						"userinfo.token.claim": "true",
						"user.attribute": "birthdate",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "birthdate",
						"jsonType.label": "String"
					}
				},
				{
					"id": "5d201a9d-a451-4dce-b27c-75665fdb860b",
					"name": "profile",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-attribute-mapper",
					"consentRequired": false,
					"config": {
						"userinfo.token.claim": "true",
						"user.attribute": "profile",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "profile",
						"jsonType.label": "String"
					}
				},
				{
					"id": "e9751704-d00c-419f-b511-400566831ea8",
					"name": "gender",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-attribute-mapper",
					"consentRequired": false,
					"config": {
						"userinfo.token.claim": "true",
						"user.attribute": "gender",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "gender",
						"jsonType.label": "String"
					}
				},
				{
					"id": "d32d00f2-d641-4dc8-9695-77b220f4f366",
					"name": "given name",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-property-mapper",
					"consentRequired": false,
					"config": {
						"userinfo.token.claim": "true",
						"user.attribute": "firstName",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "given_name",
						"jsonType.label": "String"
					}
				},
				{
					"id": "ac963ebe-7172-4fb8-bf8a-62679a37a89c",
					"name": "family name",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-property-mapper",
					"consentRequired": false,
					"config": {
						"userinfo.token.claim": "true",
						"user.attribute": "lastName",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "family_name",
						"jsonType.label": "String"
					}
				},
				{
					"id": "4f47cae9-646b-488d-b78c-8e43a86bea8a",
					"name": "middle name",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-attribute-mapper",
					"consentRequired": false,
					"config": {
						"userinfo.token.claim": "true",
						"user.attribute": "middleName",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "middle_name",
						"jsonType.label": "String"
					}
				},
				{
					"id": "e561334f-f5dc-4e68-b5cf-01cbb5162993",
					"name": "picture",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-attribute-mapper",
					"consentRequired": false,
					"config": {
						"userinfo.token.claim": "true",
						"user.attribute": "picture",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "picture",
						"jsonType.label": "String"
					}
				},
				{
					"id": "c0000802-661e-4c24-97d7-9f3bf0ab28e5",
					"name": "zoneinfo",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-attribute-mapper",
					"consentRequired": false,
					"config": {
						"userinfo.token.claim": "true",
						"user.attribute": "zoneinfo",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "zoneinfo",
						"jsonType.label": "String"
					}
				},
				{
					"id": "01c7ff39-77e8-446a-8079-a0b2392c0fb0",
					"name": "website",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-attribute-mapper",
					"consentRequired": false,
					"config": {
						"userinfo.token.claim": "true",
						"user.attribute": "website",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "website",
						"jsonType.label": "String"
					}
				},
				{
					"id": "b065f855-29e4-494d-93ef-b49d36f7a984",
					"name": "full name",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-full-name-mapper",
					"consentRequired": false,
					"config": {
						"id.token.claim": "true",
						"access.token.claim": "true",
						"userinfo.token.claim": "true"
					}
				},
				{
					"id": "d0595768-dc2d-4476-935c-6ae208847093",
					"name": "updated at",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-attribute-mapper",
					"consentRequired": false,
					"config": {
						"userinfo.token.claim": "true",
						"user.attribute": "updatedAt",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "updated_at",
						"jsonType.label": "long"
					}
				}
			]
		},
		{
			"id": "4b3fa5f7-2c7e-49e8-b4af-4f7d7f42d17d",
			"name": "web-origins",
			"description": "OpenID Connect scope for add allowed web origins to the access token",
			"protocol": "openid-connect",
			"attributes": {
				"include.in.token.scope": "false",
				"display.on.consent.screen": "false",
				"consent.screen.text": ""
			},
			"protocolMappers": [
				{
					"id": "098da4ef-658f-496b-9cc5-9136cf464d1d",
					"name": "allowed web origins",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-allowed-origins-mapper",
					"consentRequired": false,
					"config": {}
				}
			]
		},
		{
			"id": "f36fa98b-e0f3-4295-9b22-d94803c5ec90",
			"name": "roles",
			"description": "OpenID Connect scope for add user roles to the access token",
			"protocol": "openid-connect",
			"attributes": {
				"include.in.token.scope": "false",
				"display.on.consent.screen": "true",
				"consent.screen.text": "${rolesScopeConsentText}"
			},
			"protocolMappers": [
				{
					"id": "ac4e9ad3-9da6-4dd1-8c78-d1d0e9bc51a0",
					"name": "realm roles",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-realm-role-mapper",
					"consentRequired": false,
					"config": {
						"user.attribute": "foo",
						"access.token.claim": "true",
						"claim.name": "realm_access.roles",
						"jsonType.label": "String",
						"multivalued": "true"
					}
				},
				{
					"id": "a3e53d28-98c2-4acc-864e-267e4abb120e",
					"name": "client roles",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-client-role-mapper",
					"consentRequired": false,
					"config": {
						"user.attribute": "foo",
						"access.token.claim": "true",
						"claim.name": "resource_access.${client_id}.roles",
						"jsonType.label": "String",
						"multivalued": "true"
					}
				},
				{
					"id": "eeb8c67e-8646-48a2-86df-f8cddaca33d7",
					"name": "audience resolve",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-audience-resolve-mapper",
					"consentRequired": false,
					"config": {}
				}
			]
		},
		{
			"id": "14391236-aeeb-40ce-8c58-a341f05763ac",
			"name": "acr",
			"description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
			"protocol": "openid-connect",
			"attributes": {
				"include.in.token.scope": "false",
				"display.on.consent.screen": "false"
			},
			"protocolMappers": [
				{
					"id": "7eedf1d6-ef28-4354-88d6-e03228d811ea",
					"name": "acr loa level",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-acr-mapper",
					"consentRequired": false,
					"config": {
						"id.token.claim": "true",
						"access.token.claim": "true",
						"userinfo.token.claim": "true"
					}
				}
			]
		},
		{
			"id": "e21fc321-e24d-40c7-b319-5e06a0614f81",
			"name": "offline_access",
			"description": "OpenID Connect built-in scope: offline_access",
			"protocol": "openid-connect",
			"attributes": {
				"consent.screen.text": "${offlineAccessScopeConsentText}",
				"display.on.consent.screen": "true"
			}
		},
		{
			"id": "1b364447-89a9-4260-b646-113a957b4360",
			"name": "address",
			"description": "OpenID Connect built-in scope: address",
			"protocol": "openid-connect",
			"attributes": {
				"include.in.token.scope": "true",
				"display.on.consent.screen": "true",
				"consent.screen.text": "${addressScopeConsentText}"
			},
			"protocolMappers": [
				{
					"id": "154bba0e-82b3-48b6-98a5-8315dda49ff8",
					"name": "address",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-address-mapper",
					"consentRequired": false,
					"config": {
						"user.attribute.formatted": "formatted",
						"user.attribute.country": "country",
						"user.attribute.postal_code": "postal_code",
						"userinfo.token.claim": "true",
						"user.attribute.street": "street",
						"id.token.claim": "true",
						"user.attribute.region": "region",
						"access.token.claim": "true",
						"user.attribute.locality": "locality"
					}
				}
			]
		},
		{
			"id": "fdc65995-1a5d-4238-b88b-62d6794b28cf",
			"name": "email",
			"description": "OpenID Connect built-in scope: email",
			"protocol": "openid-connect",
			"attributes": {
				"include.in.token.scope": "true",
				"display.on.consent.screen": "true",
				"consent.screen.text": "${emailScopeConsentText}"
			},
			"protocolMappers": [
				{
					"id": "6190d44e-2571-4e95-8d5e-d4d834e582d9",
					"name": "email verified",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-property-mapper",
					"consentRequired": false,
					"config": {
						"userinfo.token.claim": "true",
						"user.attribute": "emailVerified",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "email_verified",
						"jsonType.label": "boolean"
					}
				},
				{
					"id": "203dd1c0-fd94-453a-8baa-c74fb281f9ec",
					"name": "email",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-property-mapper",
					"consentRequired": false,
					"config": {
						"userinfo.token.claim": "true",
						"user.attribute": "email",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "email",
						"jsonType.label": "String"
					}
				}
			]
		}
	],
	"defaultDefaultClientScopes": [
		"acr",
		"web-origins",
		"profile",
		"role_list",
		"roles",
		"email"
	],
	"defaultOptionalClientScopes": [
		"address",
		"phone",
		"microprofile-jwt",
		"offline_access"
	],
	"browserSecurityHeaders": {
		"contentSecurityPolicyReportOnly": "",
		"xContentTypeOptions": "nosniff",
		"xRobotsTag": "none",
		"xFrameOptions": "SAMEORIGIN",
		"contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
		"xXSSProtection": "1; mode=block",
		"strictTransportSecurity": "max-age=31536000; includeSubDomains"
	},
	"smtpServer": {},
	"eventsEnabled": false,
	"eventsListeners": ["jboss-logging"],
	"enabledEventTypes": [],
	"adminEventsEnabled": false,
	"adminEventsDetailsEnabled": false,
	"identityProviders": [],
	"identityProviderMappers": [],
	"components": {
		"org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
			{
				"id": "72d59b89-dba3-4059-9de0-e8090ea699e3",
				"name": "Allowed Client Scopes",
				"providerId": "allowed-client-templates",
				"subType": "authenticated",
				"subComponents": {},
				"config": {
					"allow-default-scopes": ["true"]
				}
			},
			{
				"id": "2311af11-a144-4a9e-b802-a82cf7977e56",
				"name": "Full Scope Disabled",
				"providerId": "scope",
				"subType": "anonymous",
				"subComponents": {},
				"config": {}
			},
			{
				"id": "fd00acdb-f5ce-40bf-8d16-ce1fbb1361a0",
				"name": "Allowed Protocol Mapper Types",
				"providerId": "allowed-protocol-mappers",
				"subType": "authenticated",
				"subComponents": {},
				"config": {
					"allowed-protocol-mapper-types": [
						"saml-role-list-mapper",
						"oidc-address-mapper",
						"oidc-sha256-pairwise-sub-mapper",
						"saml-user-property-mapper",
						"oidc-usermodel-attribute-mapper",
						"oidc-usermodel-property-mapper",
						"oidc-full-name-mapper",
						"saml-user-attribute-mapper"
					]
				}
			},
			{
				"id": "6bdadd5c-c5d1-492e-85b3-e52a7eeb964f",
				"name": "Consent Required",
				"providerId": "consent-required",
				"subType": "anonymous",
				"subComponents": {},
				"config": {}
			},
			{
				"id": "aafde4be-b395-4951-ae7e-6086fa2975d2",
				"name": "Max Clients Limit",
				"providerId": "max-clients",
				"subType": "anonymous",
				"subComponents": {},
				"config": {
					"max-clients": ["200"]
				}
			},
			{
				"id": "6d86f665-1335-4ced-ac1e-5a22aa5e94be",
				"name": "Allowed Protocol Mapper Types",
				"providerId": "allowed-protocol-mappers",
				"subType": "anonymous",
				"subComponents": {},
				"config": {
					"allowed-protocol-mapper-types": [
						"saml-user-attribute-mapper",
						"oidc-usermodel-attribute-mapper",
						"oidc-usermodel-property-mapper",
						"saml-user-property-mapper",
						"oidc-full-name-mapper",
						"oidc-sha256-pairwise-sub-mapper",
						"oidc-address-mapper",
						"saml-role-list-mapper"
					]
				}
			},
			{
				"id": "8cbf11a8-1fb9-4de8-8337-1ad6cadb6112",
				"name": "Trusted Hosts",
				"providerId": "trusted-hosts",
				"subType": "anonymous",
				"subComponents": {},
				"config": {
					"host-sending-registration-request-must-match": ["true"],
					"client-uris-must-match": ["true"]
				}
			},
			{
				"id": "7a0e9de1-4fbc-4fa1-b1a7-e68522b65f2a",
				"name": "Allowed Client Scopes",
				"providerId": "allowed-client-templates",
				"subType": "anonymous",
				"subComponents": {},
				"config": {
					"allow-default-scopes": ["true"]
				}
			}
		],
		"org.keycloak.keys.KeyProvider": [
			{
				"id": "4c26e4fd-bdde-45b9-832f-a3a5e56e71b1",
				"name": "rsa-generated",
				"providerId": "rsa-generated",
				"subComponents": {},
				"config": {
					"priority": ["100"]
				}
			},
			{
				"id": "521bdb7f-4a1e-4b8f-ab48-6d6e730f7f49",
				"name": "aes-generated",
				"providerId": "aes-generated",
				"subComponents": {},
				"config": {
					"priority": ["100"]
				}
			},
			{
				"id": "087f0737-bbc9-40b1-9b63-830d5b8505d4",
				"name": "hmac-generated",
				"providerId": "hmac-generated",
				"subComponents": {},
				"config": {
					"priority": ["100"],
					"algorithm": ["HS256"]
				}
			},
			{
				"id": "9c17dd56-dd2f-45ea-b119-9d48dbc14ba4",
				"name": "rsa-enc-generated",
				"providerId": "rsa-enc-generated",
				"subComponents": {},
				"config": {
					"priority": ["100"],
					"algorithm": ["RSA-OAEP"]
				}
			}
		]
	},
	"internationalizationEnabled": false,
	"supportedLocales": [],
	"authenticationFlows": [
		{
			"id": "b45759d8-f9f7-44d8-a1ab-5d6aceccc037",
			"alias": "Account verification options",
			"description": "Method with which to verity the existing account",
			"providerId": "basic-flow",
			"topLevel": false,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "idp-email-verification",
					"authenticatorFlow": false,
					"requirement": "ALTERNATIVE",
					"priority": 10,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				},
				{
					"authenticatorFlow": true,
					"requirement": "ALTERNATIVE",
					"priority": 20,
					"autheticatorFlow": true,
					"flowAlias": "Verify Existing Account by Re-authentication",
					"userSetupAllowed": false
				}
			]
		},
		{
			"id": "52314747-d524-464e-a647-d37d2bae6bd9",
			"alias": "Authentication Options",
			"description": "Authentication options.",
			"providerId": "basic-flow",
			"topLevel": false,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "basic-auth",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 10,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				},
				{
					"authenticator": "basic-auth-otp",
					"authenticatorFlow": false,
					"requirement": "DISABLED",
					"priority": 20,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				},
				{
					"authenticator": "auth-spnego",
					"authenticatorFlow": false,
					"requirement": "DISABLED",
					"priority": 30,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				}
			]
		},
		{
			"id": "67e9013d-89e3-4f0a-8d6f-d089955407d5",
			"alias": "Browser - Conditional OTP",
			"description": "Flow to determine if the OTP is required for the authentication",
			"providerId": "basic-flow",
			"topLevel": false,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "conditional-user-configured",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 10,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				},
				{
					"authenticator": "auth-otp-form",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 20,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				}
			]
		},
		{
			"id": "4019eac2-e072-44e4-8e51-5a6f0bf489dc",
			"alias": "Direct Grant - Conditional OTP",
			"description": "Flow to determine if the OTP is required for the authentication",
			"providerId": "basic-flow",
			"topLevel": false,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "conditional-user-configured",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 10,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				},
				{
					"authenticator": "direct-grant-validate-otp",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 20,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				}
			]
		},
		{
			"id": "e006e14f-8a2e-4b5c-9394-b6a9d2a65aa1",
			"alias": "First broker login - Conditional OTP",
			"description": "Flow to determine if the OTP is required for the authentication",
			"providerId": "basic-flow",
			"topLevel": false,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "conditional-user-configured",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 10,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				},
				{
					"authenticator": "auth-otp-form",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 20,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				}
			]
		},
		{
			"id": "0bd72075-77d2-45ce-b454-1bcdab6f845d",
			"alias": "Handle Existing Account",
			"description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
			"providerId": "basic-flow",
			"topLevel": false,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "idp-confirm-link",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 10,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				},
				{
					"authenticatorFlow": true,
					"requirement": "REQUIRED",
					"priority": 20,
					"autheticatorFlow": true,
					"flowAlias": "Account verification options",
					"userSetupAllowed": false
				}
			]
		},
		{
			"id": "efaa2713-e0da-46ad-bded-a3b19ed5bada",
			"alias": "Reset - Conditional OTP",
			"description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
			"providerId": "basic-flow",
			"topLevel": false,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "conditional-user-configured",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 10,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				},
				{
					"authenticator": "reset-otp",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 20,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				}
			]
		},
		{
			"id": "7cf1ca76-146a-4ff5-8923-2eecdc1dde5b",
			"alias": "User creation or linking",
			"description": "Flow for the existing/non-existing user alternatives",
			"providerId": "basic-flow",
			"topLevel": false,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticatorConfig": "create unique user config",
					"authenticator": "idp-create-user-if-unique",
					"authenticatorFlow": false,
					"requirement": "ALTERNATIVE",
					"priority": 10,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				},
				{
					"authenticatorFlow": true,
					"requirement": "ALTERNATIVE",
					"priority": 20,
					"autheticatorFlow": true,
					"flowAlias": "Handle Existing Account",
					"userSetupAllowed": false
				}
			]
		},
		{
			"id": "fed8fe69-06d0-4c4e-a3e8-f6df15f58a2d",
			"alias": "Verify Existing Account by Re-authentication",
			"description": "Reauthentication of existing account",
			"providerId": "basic-flow",
			"topLevel": false,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "idp-username-password-form",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 10,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				},
				{
					"authenticatorFlow": true,
					"requirement": "CONDITIONAL",
					"priority": 20,
					"autheticatorFlow": true,
					"flowAlias": "First broker login - Conditional OTP",
					"userSetupAllowed": false
				}
			]
		},
		{
			"id": "d9a7350e-721c-4ea9-bfbc-227e1ddfd342",
			"alias": "browser",
			"description": "browser based authentication",
			"providerId": "basic-flow",
			"topLevel": true,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "auth-cookie",
					"authenticatorFlow": false,
					"requirement": "ALTERNATIVE",
					"priority": 10,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				},
				{
					"authenticator": "auth-spnego",
					"authenticatorFlow": false,
					"requirement": "DISABLED",
					"priority": 20,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				},
				{
					"authenticator": "identity-provider-redirector",
					"authenticatorFlow": false,
					"requirement": "ALTERNATIVE",
					"priority": 25,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				},
				{
					"authenticatorFlow": true,
					"requirement": "ALTERNATIVE",
					"priority": 30,
					"autheticatorFlow": true,
					"flowAlias": "forms",
					"userSetupAllowed": false
				}
			]
		},
		{
			"id": "3a1b0209-ecff-476c-a86c-0ded435f1fd6",
			"alias": "clients",
			"description": "Base authentication for clients",
			"providerId": "client-flow",
			"topLevel": true,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "client-secret",
					"authenticatorFlow": false,
					"requirement": "ALTERNATIVE",
					"priority": 10,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				},
				{
					"authenticator": "client-jwt",
					"authenticatorFlow": false,
					"requirement": "ALTERNATIVE",
					"priority": 20,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				},
				{
					"authenticator": "client-secret-jwt",
					"authenticatorFlow": false,
					"requirement": "ALTERNATIVE",
					"priority": 30,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				},
				{
					"authenticator": "client-x509",
					"authenticatorFlow": false,
					"requirement": "ALTERNATIVE",
					"priority": 40,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				}
			]
		},
		{
			"id": "97d68db9-23bf-488b-8b4b-28bf340b9fb1",
			"alias": "direct grant",
			"description": "OpenID Connect Resource Owner Grant",
			"providerId": "basic-flow",
			"topLevel": true,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "direct-grant-validate-username",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 10,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				},
				{
					"authenticator": "direct-grant-validate-password",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 20,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				},
				{
					"authenticatorFlow": true,
					"requirement": "CONDITIONAL",
					"priority": 30,
					"autheticatorFlow": true,
					"flowAlias": "Direct Grant - Conditional OTP",
					"userSetupAllowed": false
				}
			]
		},
		{
			"id": "6a5f9bf1-1590-4234-ba52-310234042ebf",
			"alias": "docker auth",
			"description": "Used by Docker clients to authenticate against the IDP",
			"providerId": "basic-flow",
			"topLevel": true,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "docker-http-basic-authenticator",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 10,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				}
			]
		},
		{
			"id": "6ed91018-f517-47fe-9fa5-846b318c9111",
			"alias": "first broker login",
			"description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
			"providerId": "basic-flow",
			"topLevel": true,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticatorConfig": "review profile config",
					"authenticator": "idp-review-profile",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 10,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				},
				{
					"authenticatorFlow": true,
					"requirement": "REQUIRED",
					"priority": 20,
					"autheticatorFlow": true,
					"flowAlias": "User creation or linking",
					"userSetupAllowed": false
				}
			]
		},
		{
			"id": "1f543e3e-0e4f-48f5-a741-fe6f3ff0e3b5",
			"alias": "forms",
			"description": "Username, password, otp and other auth forms.",
			"providerId": "basic-flow",
			"topLevel": false,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "auth-username-password-form",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 10,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				},
				{
					"authenticatorFlow": true,
					"requirement": "CONDITIONAL",
					"priority": 20,
					"autheticatorFlow": true,
					"flowAlias": "Browser - Conditional OTP",
					"userSetupAllowed": false
				}
			]
		},
		{
			"id": "64d248b6-d6fd-428a-aa01-62e9112bf12c",
			"alias": "http challenge",
			"description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
			"providerId": "basic-flow",
			"topLevel": true,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "no-cookie-redirect",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 10,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				},
				{
					"authenticatorFlow": true,
					"requirement": "REQUIRED",
					"priority": 20,
					"autheticatorFlow": true,
					"flowAlias": "Authentication Options",
					"userSetupAllowed": false
				}
			]
		},
		{
			"id": "2bb27d9a-3bfb-4b7b-9c31-e302dbd0ddf2",
			"alias": "registration",
			"description": "registration flow",
			"providerId": "basic-flow",
			"topLevel": true,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "registration-page-form",
					"authenticatorFlow": true,
					"requirement": "REQUIRED",
					"priority": 10,
					"autheticatorFlow": true,
					"flowAlias": "registration form",
					"userSetupAllowed": false
				}
			]
		},
		{
			"id": "690841cb-df1f-494e-bd38-905eb6c3e1c9",
			"alias": "registration form",
			"description": "registration form",
			"providerId": "form-flow",
			"topLevel": false,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "registration-user-creation",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 20,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				},
				{
					"authenticator": "registration-profile-action",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 40,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				},
				{
					"authenticator": "registration-password-action",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 50,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				},
				{
					"authenticator": "registration-recaptcha-action",
					"authenticatorFlow": false,
					"requirement": "DISABLED",
					"priority": 60,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				}
			]
		},
		{
			"id": "a2c1d63e-9712-4737-9383-181e46f625f9",
			"alias": "reset credentials",
			"description": "Reset credentials for a user if they forgot their password or something",
			"providerId": "basic-flow",
			"topLevel": true,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "reset-credentials-choose-user",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 10,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				},
				{
					"authenticator": "reset-credential-email",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 20,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				},
				{
					"authenticator": "reset-password",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 30,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				},
				{
					"authenticatorFlow": true,
					"requirement": "CONDITIONAL",
					"priority": 40,
					"autheticatorFlow": true,
					"flowAlias": "Reset - Conditional OTP",
					"userSetupAllowed": false
				}
			]
		},
		{
			"id": "b0e41430-b859-48be-b252-d1bac7fc5724",
			"alias": "saml ecp",
			"description": "SAML ECP Profile Authentication Flow",
			"providerId": "basic-flow",
			"topLevel": true,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "http-basic-authenticator",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 10,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				}
			]
		}
	],
	"authenticatorConfig": [
		{
			"id": "3a8fe1bc-1f72-4060-8d85-9028fcb88061",
			"alias": "create unique user config",
			"config": {
				"require.password.update.after.registration": "false"
			}
		},
		{
			"id": "38f9d9b3-55e6-432e-b3b1-37ec503844a4",
			"alias": "review profile config",
			"config": {
				"update.profile.on.first.login": "missing"
			}
		}
	],
	"requiredActions": [
		{
			"alias": "CONFIGURE_TOTP",
			"name": "Configure OTP",
			"providerId": "CONFIGURE_TOTP",
			"enabled": true,
			"defaultAction": false,
			"priority": 10,
			"config": {}
		},
		{
			"alias": "terms_and_conditions",
			"name": "Terms and Conditions",
			"providerId": "terms_and_conditions",
			"enabled": false,
			"defaultAction": false,
			"priority": 20,
			"config": {}
		},
		{
			"alias": "UPDATE_PASSWORD",
			"name": "Update Password",
			"providerId": "UPDATE_PASSWORD",
			"enabled": true,
			"defaultAction": false,
			"priority": 30,
			"config": {}
		},
		{
			"alias": "UPDATE_PROFILE",
			"name": "Update Profile",
			"providerId": "UPDATE_PROFILE",
			"enabled": true,
			"defaultAction": false,
			"priority": 40,
			"config": {}
		},
		{
			"alias": "VERIFY_EMAIL",
			"name": "Verify Email",
			"providerId": "VERIFY_EMAIL",
			"enabled": true,
			"defaultAction": false,
			"priority": 50,
			"config": {}
		},
		{
			"alias": "delete_account",
			"name": "Delete Account",
			"providerId": "delete_account",
			"enabled": false,
			"defaultAction": false,
			"priority": 60,
			"config": {}
		},
		{
			"alias": "update_user_locale",
			"name": "Update User Locale",
			"providerId": "update_user_locale",
			"enabled": true,
			"defaultAction": false,
			"priority": 1000,
			"config": {}
		}
	],
	"browserFlow": "browser",
	"registrationFlow": "registration",
	"directGrantFlow": "direct grant",
	"resetCredentialsFlow": "reset credentials",
	"clientAuthenticationFlow": "clients",
	"dockerAuthenticationFlow": "docker auth",
	"attributes": {
		"cibaBackchannelTokenDeliveryMode": "poll",
		"cibaExpiresIn": "120",
		"cibaAuthRequestedUserHint": "login_hint",
		"oauth2DeviceCodeLifespan": "600",
		"clientOfflineSessionMaxLifespan": "0",
		"oauth2DevicePollingInterval": "5",
		"clientSessionIdleTimeout": "0",
		"parRequestUriLifespan": "60",
		"clientSessionMaxLifespan": "0",
		"clientOfflineSessionIdleTimeout": "0",
		"cibaInterval": "5"
	},
	"keycloakVersion": "18.0.2",
	"userManagedAccessAllowed": false,
	"clientProfiles": {
		"profiles": []
	},
	"clientPolicies": {
		"policies": [
			{
				"name": "fapi",
				"description": "Enforces FAPI 1.0 Baseline, FAPI 1.0 Advanced and FAPI CIBA",
				"enabled": true,
				"conditions": [
					{
						"condition": "client-roles",
						"configuration": {
							"is-negative-logic": false,
							"roles": ["fapi-client"]
						}
					}
				],
				"profiles": ["fapi-1-advanced", "fapi-ciba"]
			}
		]
	}
}
