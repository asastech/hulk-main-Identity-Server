{
	"id": "71261f4c-722c-4558-bc67-694741ab73b9",
	"realm": "master",
	"displayName": "Keycloak",
	"displayNameHtml": "<div class=\"kc-logo-text\"><span>Keycloak</span></div>",
	"notBefore": 0,
	"defaultSignatureAlgorithm": "RS256",
	"revokeRefreshToken": false,
	"refreshTokenMaxReuse": 0,
	"accessTokenLifespan": 60,
	"accessTokenLifespanForImplicitFlow": 900,
	"ssoSessionIdleTimeout": 1800,
	"ssoSessionMaxLifespan": 36000,
	"ssoSessionIdleTimeoutRememberMe": 0,
	"ssoSessionMaxLifespanRememberMe": 0,
	"offlineSessionIdleTimeout": 2592000,
	"offlineSessionMaxLifespanEnabled": false,
	"offlineSessionMaxLifespan": 5184000,
	"clientSessionIdleTimeout": 0,
	"clientSessionMaxLifespan": 0,
	"clientOfflineSessionIdleTimeout": 0,
	"clientOfflineSessionMaxLifespan": 0,
	"accessCodeLifespan": 60,
	"accessCodeLifespanUserAction": 300,
	"accessCodeLifespanLogin": 1800,
	"actionTokenGeneratedByAdminLifespan": 43200,
	"actionTokenGeneratedByUserLifespan": 300,
	"oauth2DeviceCodeLifespan": 600,
	"oauth2DevicePollingInterval": 5,
	"enabled": true,
	"sslRequired": "external",
	"registrationAllowed": false,
	"registrationEmailAsUsername": false,
	"rememberMe": false,
	"verifyEmail": false,
	"loginWithEmailAllowed": true,
	"duplicateEmailsAllowed": false,
	"resetPasswordAllowed": false,
	"editUsernameAllowed": false,
	"bruteForceProtected": false,
	"permanentLockout": false,
	"maxFailureWaitSeconds": 900,
	"minimumQuickLoginWaitSeconds": 60,
	"waitIncrementSeconds": 60,
	"quickLoginCheckMilliSeconds": 1000,
	"maxDeltaTimeSeconds": 43200,
	"failureFactor": 30,
	"roles": {
		"realm": [
			{
				"id": "8ee0c561-8f78-4ede-9d2d-72da1cad5641",
				"name": "offline_access",
				"description": "${role_offline-access}",
				"composite": false,
				"clientRole": false,
				"containerId": "71261f4c-722c-4558-bc67-694741ab73b9",
				"attributes": {}
			},
			{
				"id": "7db5818f-2998-468e-bf10-6dffd78a5a47",
				"name": "default-roles-master",
				"description": "${role_default-roles}",
				"composite": true,
				"composites": {
					"realm": ["offline_access", "uma_authorization"],
					"client": {
						"account": ["manage-account", "view-profile"]
					}
				},
				"clientRole": false,
				"containerId": "71261f4c-722c-4558-bc67-694741ab73b9",
				"attributes": {}
			},
			{
				"id": "ea329f36-20d5-4f95-ade9-f649cf20fc38",
				"name": "admin",
				"description": "${role_admin}",
				"composite": true,
				"composites": {
					"realm": ["create-realm"],
					"client": {
						"master-realm": [
							"query-realms",
							"create-client",
							"manage-identity-providers",
							"view-clients",
							"view-events",
							"view-identity-providers",
							"manage-clients",
							"manage-events",
							"view-realm",
							"view-users",
							"query-users",
							"manage-users",
							"manage-realm",
							"query-clients",
							"view-authorization",
							"impersonation",
							"manage-authorization",
							"query-groups"
						]
					}
				},
				"clientRole": false,
				"containerId": "71261f4c-722c-4558-bc67-694741ab73b9",
				"attributes": {}
			},
			{
				"id": "0f7011a8-2f67-498d-9d1c-c9e63c807470",
				"name": "create-realm",
				"description": "${role_create-realm}",
				"composite": false,
				"clientRole": false,
				"containerId": "71261f4c-722c-4558-bc67-694741ab73b9",
				"attributes": {}
			},
			{
				"id": "4ebd002b-7031-477c-b1d0-362a8034f2c3",
				"name": "uma_authorization",
				"description": "${role_uma_authorization}",
				"composite": false,
				"clientRole": false,
				"containerId": "71261f4c-722c-4558-bc67-694741ab73b9",
				"attributes": {}
			}
		],
		"client": {
			"security-admin-console": [],
			"admin-cli": [],
			"account-console": [],
			"broker": [
				{
					"id": "d74331b8-46d9-411d-b3da-d4347dd68d10",
					"name": "read-token",
					"description": "${role_read-token}",
					"composite": false,
					"clientRole": true,
					"containerId": "884af5c7-9f68-4f7f-9ce0-6316def14d10",
					"attributes": {}
				}
			],
			"master-realm": [
				{
					"id": "14f59d32-4ed7-48a2-a624-448104fb8863",
					"name": "query-realms",
					"description": "${role_query-realms}",
					"composite": false,
					"clientRole": true,
					"containerId": "cff9b1fd-7432-4f5f-8794-6e82ea013afe",
					"attributes": {}
				},
				{
					"id": "5a67a44a-c526-4f0f-8350-04cb07e54dc3",
					"name": "create-client",
					"description": "${role_create-client}",
					"composite": false,
					"clientRole": true,
					"containerId": "cff9b1fd-7432-4f5f-8794-6e82ea013afe",
					"attributes": {}
				},
				{
					"id": "30388d24-906f-43a4-9a1a-622c49436a98",
					"name": "manage-identity-providers",
					"description": "${role_manage-identity-providers}",
					"composite": false,
					"clientRole": true,
					"containerId": "cff9b1fd-7432-4f5f-8794-6e82ea013afe",
					"attributes": {}
				},
				{
					"id": "2c93d632-9b4e-4713-b5f9-31f962928053",
					"name": "view-clients",
					"description": "${role_view-clients}",
					"composite": true,
					"composites": {
						"client": {
							"master-realm": ["query-clients"]
						}
					},
					"clientRole": true,
					"containerId": "cff9b1fd-7432-4f5f-8794-6e82ea013afe",
					"attributes": {}
				},
				{
					"id": "b83c35b2-de6a-4bcc-8922-ba897bb846de",
					"name": "view-events",
					"description": "${role_view-events}",
					"composite": false,
					"clientRole": true,
					"containerId": "cff9b1fd-7432-4f5f-8794-6e82ea013afe",
					"attributes": {}
				},
				{
					"id": "b473af29-68c4-4438-8c3f-1fa203915708",
					"name": "manage-clients",
					"description": "${role_manage-clients}",
					"composite": false,
					"clientRole": true,
					"containerId": "cff9b1fd-7432-4f5f-8794-6e82ea013afe",
					"attributes": {}
				},
				{
					"id": "726f103e-99da-46b2-a1ea-21365d24ece4",
					"name": "view-identity-providers",
					"description": "${role_view-identity-providers}",
					"composite": false,
					"clientRole": true,
					"containerId": "cff9b1fd-7432-4f5f-8794-6e82ea013afe",
					"attributes": {}
				},
				{
					"id": "5f7eace6-8fb1-45b9-9ee2-6741af2e2681",
					"name": "manage-events",
					"description": "${role_manage-events}",
					"composite": false,
					"clientRole": true,
					"containerId": "cff9b1fd-7432-4f5f-8794-6e82ea013afe",
					"attributes": {}
				},
				{
					"id": "23e3bb8c-9dfc-4241-bdc6-1d819ff0f6cd",
					"name": "view-realm",
					"description": "${role_view-realm}",
					"composite": false,
					"clientRole": true,
					"containerId": "cff9b1fd-7432-4f5f-8794-6e82ea013afe",
					"attributes": {}
				},
				{
					"id": "869e3f11-7cd3-48db-8d54-138d3d958c71",
					"name": "view-users",
					"description": "${role_view-users}",
					"composite": true,
					"composites": {
						"client": {
							"master-realm": ["query-users", "query-groups"]
						}
					},
					"clientRole": true,
					"containerId": "cff9b1fd-7432-4f5f-8794-6e82ea013afe",
					"attributes": {}
				},
				{
					"id": "5b947aa0-eadd-4ddb-ad92-81f14b238dd6",
					"name": "query-users",
					"description": "${role_query-users}",
					"composite": false,
					"clientRole": true,
					"containerId": "cff9b1fd-7432-4f5f-8794-6e82ea013afe",
					"attributes": {}
				},
				{
					"id": "2ef7fd12-40ee-4631-8797-242153112b6b",
					"name": "manage-users",
					"description": "${role_manage-users}",
					"composite": false,
					"clientRole": true,
					"containerId": "cff9b1fd-7432-4f5f-8794-6e82ea013afe",
					"attributes": {}
				},
				{
					"id": "8476fc89-df5c-45dd-929a-7f3819f95e94",
					"name": "manage-realm",
					"description": "${role_manage-realm}",
					"composite": false,
					"clientRole": true,
					"containerId": "cff9b1fd-7432-4f5f-8794-6e82ea013afe",
					"attributes": {}
				},
				{
					"id": "c20ef4b7-12e2-41f3-8889-0c1457243d78",
					"name": "query-clients",
					"description": "${role_query-clients}",
					"composite": false,
					"clientRole": true,
					"containerId": "cff9b1fd-7432-4f5f-8794-6e82ea013afe",
					"attributes": {}
				},
				{
					"id": "db7fc468-c5a7-4339-b0d6-5cea9b2575f7",
					"name": "view-authorization",
					"description": "${role_view-authorization}",
					"composite": false,
					"clientRole": true,
					"containerId": "cff9b1fd-7432-4f5f-8794-6e82ea013afe",
					"attributes": {}
				},
				{
					"id": "58b41cd3-3f8f-4beb-a604-fbb49176e416",
					"name": "impersonation",
					"description": "${role_impersonation}",
					"composite": false,
					"clientRole": true,
					"containerId": "cff9b1fd-7432-4f5f-8794-6e82ea013afe",
					"attributes": {}
				},
				{
					"id": "ff6b8b3a-c6fa-4d4d-bc61-aa1950e4e0ea",
					"name": "manage-authorization",
					"description": "${role_manage-authorization}",
					"composite": false,
					"clientRole": true,
					"containerId": "cff9b1fd-7432-4f5f-8794-6e82ea013afe",
					"attributes": {}
				},
				{
					"id": "41bc4615-7ad6-4614-98ad-5e6f46bb54dd",
					"name": "query-groups",
					"description": "${role_query-groups}",
					"composite": false,
					"clientRole": true,
					"containerId": "cff9b1fd-7432-4f5f-8794-6e82ea013afe",
					"attributes": {}
				}
			],
			"hulk": [
				{
					"id": "1779012f-0f20-4e60-b7eb-ddebb4e4b66e",
					"name": "uma_protection",
					"composite": false,
					"clientRole": true,
					"containerId": "46d014a6-7dd4-4a66-bcbe-cffbe80cc33c",
					"attributes": {}
				}
			],
			"account": [
				{
					"id": "068453aa-bbea-43a0-8b18-1c6f569a4b77",
					"name": "view-consent",
					"description": "${role_view-consent}",
					"composite": false,
					"clientRole": true,
					"containerId": "15a289df-dff7-42ac-83d0-f43fcecb9e89",
					"attributes": {}
				},
				{
					"id": "b1117847-bc69-4867-afc1-d12ed0cd6154",
					"name": "manage-account",
					"description": "${role_manage-account}",
					"composite": true,
					"composites": {
						"client": {
							"account": ["manage-account-links"]
						}
					},
					"clientRole": true,
					"containerId": "15a289df-dff7-42ac-83d0-f43fcecb9e89",
					"attributes": {}
				},
				{
					"id": "d76bee46-efbe-4337-b918-decb47ec03fc",
					"name": "view-profile",
					"description": "${role_view-profile}",
					"composite": false,
					"clientRole": true,
					"containerId": "15a289df-dff7-42ac-83d0-f43fcecb9e89",
					"attributes": {}
				},
				{
					"id": "19e7dc16-1c67-4cba-9a4a-68fcf2ee2a13",
					"name": "view-applications",
					"description": "${role_view-applications}",
					"composite": false,
					"clientRole": true,
					"containerId": "15a289df-dff7-42ac-83d0-f43fcecb9e89",
					"attributes": {}
				},
				{
					"id": "7aca0364-d398-4399-ac66-0bfe597414c2",
					"name": "delete-account",
					"description": "${role_delete-account}",
					"composite": false,
					"clientRole": true,
					"containerId": "15a289df-dff7-42ac-83d0-f43fcecb9e89",
					"attributes": {}
				},
				{
					"id": "dbcef557-701c-4fa2-9a54-fecd3cae3521",
					"name": "manage-account-links",
					"description": "${role_manage-account-links}",
					"composite": false,
					"clientRole": true,
					"containerId": "15a289df-dff7-42ac-83d0-f43fcecb9e89",
					"attributes": {}
				},
				{
					"id": "e3acd767-2d0d-42ba-a601-c40bd1666182",
					"name": "manage-consent",
					"description": "${role_manage-consent}",
					"composite": true,
					"composites": {
						"client": {
							"account": ["view-consent"]
						}
					},
					"clientRole": true,
					"containerId": "15a289df-dff7-42ac-83d0-f43fcecb9e89",
					"attributes": {}
				}
			]
		}
	},
	"groups": [],
	"defaultRole": {
		"id": "7db5818f-2998-468e-bf10-6dffd78a5a47",
		"name": "default-roles-master",
		"description": "${role_default-roles}",
		"composite": true,
		"clientRole": false,
		"containerId": "71261f4c-722c-4558-bc67-694741ab73b9"
	},
	"requiredCredentials": ["password"],
	"otpPolicyType": "totp",
	"otpPolicyAlgorithm": "HmacSHA1",
	"otpPolicyInitialCounter": 0,
	"otpPolicyDigits": 6,
	"otpPolicyLookAheadWindow": 1,
	"otpPolicyPeriod": 30,
	"otpSupportedApplications": ["FreeOTP", "Google Authenticator"],
	"webAuthnPolicyRpEntityName": "keycloak",
	"webAuthnPolicySignatureAlgorithms": ["ES256"],
	"webAuthnPolicyRpId": "",
	"webAuthnPolicyAttestationConveyancePreference": "not specified",
	"webAuthnPolicyAuthenticatorAttachment": "not specified",
	"webAuthnPolicyRequireResidentKey": "not specified",
	"webAuthnPolicyUserVerificationRequirement": "not specified",
	"webAuthnPolicyCreateTimeout": 0,
	"webAuthnPolicyAvoidSameAuthenticatorRegister": false,
	"webAuthnPolicyAcceptableAaguids": [],
	"webAuthnPolicyPasswordlessRpEntityName": "keycloak",
	"webAuthnPolicyPasswordlessSignatureAlgorithms": ["ES256"],
	"webAuthnPolicyPasswordlessRpId": "",
	"webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
	"webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
	"webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
	"webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
	"webAuthnPolicyPasswordlessCreateTimeout": 0,
	"webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
	"webAuthnPolicyPasswordlessAcceptableAaguids": [],
	"users": [
		{
			"id": "36fdfcef-8265-4238-8081-5e6276650963",
			"createdTimestamp": 1659776345687,
			"username": "service-account-hulk",
			"enabled": true,
			"totp": false,
			"emailVerified": false,
			"serviceAccountClientId": "hulk",
			"disableableCredentialTypes": [],
			"requiredActions": [],
			"realmRoles": ["default-roles-master"],
			"clientRoles": {
				"hulk": ["uma_protection"]
			},
			"notBefore": 0,
			"groups": []
		}
	],
	"scopeMappings": [
		{
			"clientScope": "offline_access",
			"roles": ["offline_access"]
		}
	],
	"clientScopeMappings": {
		"account": [
			{
				"client": "account-console",
				"roles": ["manage-account"]
			}
		]
	},
	"clients": [
		{
			"id": "15a289df-dff7-42ac-83d0-f43fcecb9e89",
			"clientId": "account",
			"name": "${client_account}",
			"rootUrl": "${authBaseUrl}",
			"baseUrl": "/realms/master/account/",
			"surrogateAuthRequired": false,
			"enabled": true,
			"alwaysDisplayInConsole": false,
			"clientAuthenticatorType": "client-secret",
			"redirectUris": ["/realms/master/account/*"],
			"webOrigins": [],
			"notBefore": 0,
			"bearerOnly": false,
			"consentRequired": false,
			"standardFlowEnabled": true,
			"implicitFlowEnabled": false,
			"directAccessGrantsEnabled": false,
			"serviceAccountsEnabled": false,
			"publicClient": true,
			"frontchannelLogout": false,
			"protocol": "openid-connect",
			"attributes": {
				"post.logout.redirect.uris": "+"
			},
			"authenticationFlowBindingOverrides": {},
			"fullScopeAllowed": false,
			"nodeReRegistrationTimeout": 0,
			"defaultClientScopes": [
				"web-origins",
				"acr",
				"profile",
				"roles",
				"email"
			],
			"optionalClientScopes": [
				"address",
				"phone",
				"offline_access",
				"microprofile-jwt"
			]
		},
		{
			"id": "644e08f8-20b6-40c3-9054-18585e1b1571",
			"clientId": "account-console",
			"name": "${client_account-console}",
			"rootUrl": "${authBaseUrl}",
			"baseUrl": "/realms/master/account/",
			"surrogateAuthRequired": false,
			"enabled": true,
			"alwaysDisplayInConsole": false,
			"clientAuthenticatorType": "client-secret",
			"redirectUris": ["/realms/master/account/*"],
			"webOrigins": [],
			"notBefore": 0,
			"bearerOnly": false,
			"consentRequired": false,
			"standardFlowEnabled": true,
			"implicitFlowEnabled": false,
			"directAccessGrantsEnabled": false,
			"serviceAccountsEnabled": false,
			"publicClient": true,
			"frontchannelLogout": false,
			"protocol": "openid-connect",
			"attributes": {
				"post.logout.redirect.uris": "+",
				"pkce.code.challenge.method": "S256"
			},
			"authenticationFlowBindingOverrides": {},
			"fullScopeAllowed": false,
			"nodeReRegistrationTimeout": 0,
			"protocolMappers": [
				{
					"id": "b98aff58-2276-4822-85cd-01abb692f735",
					"name": "audience resolve",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-audience-resolve-mapper",
					"consentRequired": false,
					"config": {}
				}
			],
			"defaultClientScopes": [
				"web-origins",
				"acr",
				"profile",
				"roles",
				"email"
			],
			"optionalClientScopes": [
				"address",
				"phone",
				"offline_access",
				"microprofile-jwt"
			]
		},
		{
			"id": "41291b69-8b67-4ed6-9821-8d2e3a324076",
			"clientId": "admin-cli",
			"name": "${client_admin-cli}",
			"surrogateAuthRequired": false,
			"enabled": true,
			"alwaysDisplayInConsole": false,
			"clientAuthenticatorType": "client-secret",
			"redirectUris": [],
			"webOrigins": [],
			"notBefore": 0,
			"bearerOnly": false,
			"consentRequired": false,
			"standardFlowEnabled": false,
			"implicitFlowEnabled": false,
			"directAccessGrantsEnabled": true,
			"serviceAccountsEnabled": false,
			"publicClient": true,
			"frontchannelLogout": false,
			"protocol": "openid-connect",
			"attributes": {},
			"authenticationFlowBindingOverrides": {},
			"fullScopeAllowed": false,
			"nodeReRegistrationTimeout": 0,
			"defaultClientScopes": [
				"web-origins",
				"acr",
				"profile",
				"roles",
				"email"
			],
			"optionalClientScopes": [
				"address",
				"phone",
				"offline_access",
				"microprofile-jwt"
			]
		},
		{
			"id": "884af5c7-9f68-4f7f-9ce0-6316def14d10",
			"clientId": "broker",
			"name": "${client_broker}",
			"surrogateAuthRequired": false,
			"enabled": true,
			"alwaysDisplayInConsole": false,
			"clientAuthenticatorType": "client-secret",
			"redirectUris": [],
			"webOrigins": [],
			"notBefore": 0,
			"bearerOnly": true,
			"consentRequired": false,
			"standardFlowEnabled": true,
			"implicitFlowEnabled": false,
			"directAccessGrantsEnabled": false,
			"serviceAccountsEnabled": false,
			"publicClient": false,
			"frontchannelLogout": false,
			"protocol": "openid-connect",
			"attributes": {},
			"authenticationFlowBindingOverrides": {},
			"fullScopeAllowed": false,
			"nodeReRegistrationTimeout": 0,
			"defaultClientScopes": [
				"web-origins",
				"acr",
				"profile",
				"roles",
				"email"
			],
			"optionalClientScopes": [
				"address",
				"phone",
				"offline_access",
				"microprofile-jwt"
			]
		},
		{
			"id": "46d014a6-7dd4-4a66-bcbe-cffbe80cc33c",
			"clientId": "hulk",
			"name": "OFIN Hulk Client",
			"description": "",
			"rootUrl": "http://localhost:3000/",
			"adminUrl": "",
			"baseUrl": "http://localhost:3000",
			"surrogateAuthRequired": false,
			"enabled": true,
			"alwaysDisplayInConsole": true,
			"clientAuthenticatorType": "client-secret",
			"secret": "super_secret_hulk_client_secret",
			"redirectUris": [
				"",
				"http://localhost:3000/v1/auth/redirect",
				"http://localhost:3000/v1/auth/callback"
			],
			"webOrigins": [],
			"notBefore": 0,
			"bearerOnly": false,
			"consentRequired": true,
			"standardFlowEnabled": true,
			"implicitFlowEnabled": true,
			"directAccessGrantsEnabled": true,
			"serviceAccountsEnabled": true,
			"authorizationServicesEnabled": true,
			"publicClient": false,
			"frontchannelLogout": true,
			"protocol": "openid-connect",
			"attributes": {
				"client.secret.creation.time": "1659776345",
				"oauth2.device.authorization.grant.enabled": "true",
				"use.jwks.url": "true",
				"backchannel.logout.revoke.offline.tokens": "false",
				"use.refresh.tokens": "true",
				"tls-client-certificate-bound-access-tokens": "false",
				"oidc.ciba.grant.enabled": "true",
				"backchannel.logout.session.required": "true",
				"client_credentials.use_refresh_token": "false",
				"jwks.url": "http://localhost:8080/realms/fapi/protocol/openid-connect/certs",
				"acr.loa.map": "{}",
				"require.pushed.authorization.requests": "false",
				"display.on.consent.screen": "false",
				"token.response.type.bearer.lower-case": "false"
			},
			"authenticationFlowBindingOverrides": {},
			"fullScopeAllowed": true,
			"nodeReRegistrationTimeout": -1,
			"protocolMappers": [
				{
					"id": "2a3f0267-a8b4-4785-a670-6cdb724640b4",
					"name": "Client Host",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usersessionmodel-note-mapper",
					"consentRequired": false,
					"config": {
						"user.session.note": "clientHost",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "clientHost",
						"jsonType.label": "String"
					}
				},
				{
					"id": "89ba6638-0e3c-4e8f-8d54-9ff778b27e4c",
					"name": "Client IP Address",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usersessionmodel-note-mapper",
					"consentRequired": false,
					"config": {
						"user.session.note": "clientAddress",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "clientAddress",
						"jsonType.label": "String"
					}
				},
				{
					"id": "2ce95e8e-018b-437e-9abe-a187c406dcbf",
					"name": "Client ID",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usersessionmodel-note-mapper",
					"consentRequired": false,
					"config": {
						"user.session.note": "clientId",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "clientId",
						"jsonType.label": "String"
					}
				}
			],
			"defaultClientScopes": [
				"web-origins",
				"acr",
				"profile",
				"roles",
				"email",
				"Accounts"
			],
			"optionalClientScopes": [
				"address",
				"phone",
				"offline_access",
				"microprofile-jwt"
			],
			"authorizationSettings": {
				"allowRemoteResourceManagement": true,
				"policyEnforcementMode": "ENFORCING",
				"resources": [
					{
						"name": "Default Resource",
						"type": "urn:hulk:resources:default",
						"ownerManagedAccess": false,
						"attributes": {},
						"_id": "7bc29ff0-cc76-4f9d-a609-c74bf568884d",
						"uris": ["/*"]
					}
				],
				"policies": [
					{
						"id": "237c9283-2503-49be-827b-5ac398b984d4",
						"name": "Default Policy",
						"description": "A policy that grants access only for users within this realm",
						"type": "resource",
						"logic": "POSITIVE",
						"decisionStrategy": "AFFIRMATIVE",
						"config": {
							"code": "// by default, grants any permission associated with this policy\n$evaluation.grant();\n"
						}
					},
					{
						"id": "9c1d37b2-225f-42b8-8084-6babf34ad702",
						"name": "Default Permission",
						"description": "A permission that applies to the default resource type",
						"type": "resource",
						"logic": "POSITIVE",
						"decisionStrategy": "UNANIMOUS",
						"config": {
							"defaultResourceType": "urn:hulk:resources:default",
							"applyPolicies": "[\"Default Policy\"]"
						}
					}
				],
				"scopes": [],
				"decisionStrategy": "UNANIMOUS"
			}
		},
		{
			"id": "cff9b1fd-7432-4f5f-8794-6e82ea013afe",
			"clientId": "master-realm",
			"name": "master Realm",
			"surrogateAuthRequired": false,
			"enabled": true,
			"alwaysDisplayInConsole": false,
			"clientAuthenticatorType": "client-secret",
			"redirectUris": [],
			"webOrigins": [],
			"notBefore": 0,
			"bearerOnly": true,
			"consentRequired": false,
			"standardFlowEnabled": true,
			"implicitFlowEnabled": false,
			"directAccessGrantsEnabled": false,
			"serviceAccountsEnabled": false,
			"publicClient": false,
			"frontchannelLogout": false,
			"attributes": {},
			"authenticationFlowBindingOverrides": {},
			"fullScopeAllowed": false,
			"nodeReRegistrationTimeout": 0,
			"defaultClientScopes": [
				"web-origins",
				"acr",
				"profile",
				"roles",
				"email"
			],
			"optionalClientScopes": [
				"address",
				"phone",
				"offline_access",
				"microprofile-jwt"
			]
		},
		{
			"id": "51b4f05d-086f-42e4-8184-d0706447d2b0",
			"clientId": "security-admin-console",
			"name": "${client_security-admin-console}",
			"rootUrl": "${authAdminUrl}",
			"baseUrl": "/admin/master/console/",
			"surrogateAuthRequired": false,
			"enabled": true,
			"alwaysDisplayInConsole": false,
			"clientAuthenticatorType": "client-secret",
			"redirectUris": ["/admin/master/console/*"],
			"webOrigins": ["+"],
			"notBefore": 0,
			"bearerOnly": false,
			"consentRequired": false,
			"standardFlowEnabled": true,
			"implicitFlowEnabled": false,
			"directAccessGrantsEnabled": false,
			"serviceAccountsEnabled": false,
			"publicClient": true,
			"frontchannelLogout": false,
			"protocol": "openid-connect",
			"attributes": {
				"post.logout.redirect.uris": "+",
				"pkce.code.challenge.method": "S256"
			},
			"authenticationFlowBindingOverrides": {},
			"fullScopeAllowed": false,
			"nodeReRegistrationTimeout": 0,
			"protocolMappers": [
				{
					"id": "6b80f1e0-2c16-4d6b-b450-bb52c8c38f35",
					"name": "locale",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-attribute-mapper",
					"consentRequired": false,
					"config": {
						"userinfo.token.claim": "true",
						"user.attribute": "locale",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "locale",
						"jsonType.label": "String"
					}
				}
			],
			"defaultClientScopes": [
				"web-origins",
				"acr",
				"profile",
				"roles",
				"email"
			],
			"optionalClientScopes": [
				"address",
				"phone",
				"offline_access",
				"microprofile-jwt"
			]
		}
	],
	"clientScopes": [
		{
			"id": "6311e42c-7fb0-4d56-934f-9db9af236184",
			"name": "acr",
			"description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
			"protocol": "openid-connect",
			"attributes": {
				"include.in.token.scope": "false",
				"display.on.consent.screen": "false"
			},
			"protocolMappers": [
				{
					"id": "1ab362d2-ade1-4732-b235-d1f3ded89ac5",
					"name": "acr loa level",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-acr-mapper",
					"consentRequired": false,
					"config": {
						"id.token.claim": "true",
						"access.token.claim": "true"
					}
				}
			]
		},
		{
			"id": "ade29102-854f-404d-be33-69eeef1e6b53",
			"name": "microprofile-jwt",
			"description": "Microprofile - JWT built-in scope",
			"protocol": "openid-connect",
			"attributes": {
				"include.in.token.scope": "true",
				"display.on.consent.screen": "false"
			},
			"protocolMappers": [
				{
					"id": "1bf31364-678f-4b30-b6bc-82d8ebc23f08",
					"name": "groups",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-realm-role-mapper",
					"consentRequired": false,
					"config": {
						"multivalued": "true",
						"user.attribute": "foo",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "groups",
						"jsonType.label": "String"
					}
				},
				{
					"id": "d2a0b480-2394-42d0-97d8-9fb1fd1f8c84",
					"name": "upn",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-property-mapper",
					"consentRequired": false,
					"config": {
						"userinfo.token.claim": "true",
						"user.attribute": "username",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "upn",
						"jsonType.label": "String"
					}
				}
			]
		},
		{
			"id": "927a5708-7aaf-4801-9b00-3b1b06282dc9",
			"name": "phone",
			"description": "OpenID Connect built-in scope: phone",
			"protocol": "openid-connect",
			"attributes": {
				"include.in.token.scope": "true",
				"display.on.consent.screen": "true",
				"consent.screen.text": "${phoneScopeConsentText}"
			},
			"protocolMappers": [
				{
					"id": "fb37b200-7c82-4611-a0ce-17a318179777",
					"name": "phone number",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-attribute-mapper",
					"consentRequired": false,
					"config": {
						"userinfo.token.claim": "true",
						"user.attribute": "phoneNumber",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "phone_number",
						"jsonType.label": "String"
					}
				},
				{
					"id": "17e19da9-8637-4e1f-a680-f34a643dc456",
					"name": "phone number verified",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-attribute-mapper",
					"consentRequired": false,
					"config": {
						"userinfo.token.claim": "true",
						"user.attribute": "phoneNumberVerified",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "phone_number_verified",
						"jsonType.label": "boolean"
					}
				}
			]
		},
		{
			"id": "69d4e729-6e26-4be7-9385-d81f32a2ed96",
			"name": "email",
			"description": "OpenID Connect built-in scope: email",
			"protocol": "openid-connect",
			"attributes": {
				"include.in.token.scope": "true",
				"display.on.consent.screen": "true",
				"consent.screen.text": "${emailScopeConsentText}"
			},
			"protocolMappers": [
				{
					"id": "97c0f82f-a4e6-4dfe-a38f-1f647782923c",
					"name": "email verified",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-property-mapper",
					"consentRequired": false,
					"config": {
						"userinfo.token.claim": "true",
						"user.attribute": "emailVerified",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "email_verified",
						"jsonType.label": "boolean"
					}
				},
				{
					"id": "452202fc-30cd-4810-bc92-fbc4abfd4aa1",
					"name": "email",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-property-mapper",
					"consentRequired": false,
					"config": {
						"userinfo.token.claim": "true",
						"user.attribute": "email",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "email",
						"jsonType.label": "String"
					}
				}
			]
		},
		{
			"id": "6f6caa43-e53e-4c3d-a654-15ef2faa5957",
			"name": "profile",
			"description": "OpenID Connect built-in scope: profile",
			"protocol": "openid-connect",
			"attributes": {
				"include.in.token.scope": "true",
				"display.on.consent.screen": "true",
				"consent.screen.text": "${profileScopeConsentText}"
			},
			"protocolMappers": [
				{
					"id": "8016bc7b-7bf8-4136-b0c1-d23628115690",
					"name": "full name",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-full-name-mapper",
					"consentRequired": false,
					"config": {
						"id.token.claim": "true",
						"access.token.claim": "true",
						"userinfo.token.claim": "true"
					}
				},
				{
					"id": "96e971c6-0758-4fe0-8e86-fad497fadeb8",
					"name": "middle name",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-attribute-mapper",
					"consentRequired": false,
					"config": {
						"userinfo.token.claim": "true",
						"user.attribute": "middleName",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "middle_name",
						"jsonType.label": "String"
					}
				},
				{
					"id": "d1ee8d04-7d80-49bd-89f5-0b94af9f908e",
					"name": "updated at",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-attribute-mapper",
					"consentRequired": false,
					"config": {
						"userinfo.token.claim": "true",
						"user.attribute": "updatedAt",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "updated_at",
						"jsonType.label": "long"
					}
				},
				{
					"id": "20a033cc-d409-42e2-b665-6bb9d288ae76",
					"name": "zoneinfo",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-attribute-mapper",
					"consentRequired": false,
					"config": {
						"userinfo.token.claim": "true",
						"user.attribute": "zoneinfo",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "zoneinfo",
						"jsonType.label": "String"
					}
				},
				{
					"id": "3a5bb1f8-d4ec-4892-9a83-c5d7cbe11958",
					"name": "given name",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-property-mapper",
					"consentRequired": false,
					"config": {
						"userinfo.token.claim": "true",
						"user.attribute": "firstName",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "given_name",
						"jsonType.label": "String"
					}
				},
				{
					"id": "5dabd382-729b-40af-b576-b1c12520fbc5",
					"name": "nickname",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-attribute-mapper",
					"consentRequired": false,
					"config": {
						"userinfo.token.claim": "true",
						"user.attribute": "nickname",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "nickname",
						"jsonType.label": "String"
					}
				},
				{
					"id": "6719a4b0-34d8-4e99-a883-0d919a55a043",
					"name": "gender",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-attribute-mapper",
					"consentRequired": false,
					"config": {
						"userinfo.token.claim": "true",
						"user.attribute": "gender",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "gender",
						"jsonType.label": "String"
					}
				},
				{
					"id": "42a5e578-28cc-486e-843a-cdba483cab01",
					"name": "family name",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-property-mapper",
					"consentRequired": false,
					"config": {
						"userinfo.token.claim": "true",
						"user.attribute": "lastName",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "family_name",
						"jsonType.label": "String"
					}
				},
				{
					"id": "d6e21142-eb55-48fb-9e2f-0db081221656",
					"name": "picture",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-attribute-mapper",
					"consentRequired": false,
					"config": {
						"userinfo.token.claim": "true",
						"user.attribute": "picture",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "picture",
						"jsonType.label": "String"
					}
				},
				{
					"id": "31bc5f1e-0d2f-4277-a5a4-ed9481da88a4",
					"name": "website",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-attribute-mapper",
					"consentRequired": false,
					"config": {
						"userinfo.token.claim": "true",
						"user.attribute": "website",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "website",
						"jsonType.label": "String"
					}
				},
				{
					"id": "44aca5e5-1b9e-4691-ac38-825d1fb4548c",
					"name": "profile",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-attribute-mapper",
					"consentRequired": false,
					"config": {
						"userinfo.token.claim": "true",
						"user.attribute": "profile",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "profile",
						"jsonType.label": "String"
					}
				},
				{
					"id": "1e3c1fd0-d22b-4c42-a4e8-611fd11e38fc",
					"name": "locale",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-attribute-mapper",
					"consentRequired": false,
					"config": {
						"userinfo.token.claim": "true",
						"user.attribute": "locale",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "locale",
						"jsonType.label": "String"
					}
				},
				{
					"id": "b9bb3111-805b-4b34-b600-d5ced534b961",
					"name": "birthdate",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-attribute-mapper",
					"consentRequired": false,
					"config": {
						"userinfo.token.claim": "true",
						"user.attribute": "birthdate",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "birthdate",
						"jsonType.label": "String"
					}
				},
				{
					"id": "e68d9e49-b803-413b-aa21-88a8adb2fb70",
					"name": "username",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-property-mapper",
					"consentRequired": false,
					"config": {
						"userinfo.token.claim": "true",
						"user.attribute": "username",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "preferred_username",
						"jsonType.label": "String"
					}
				}
			]
		},
		{
			"id": "5f2b1dd5-ac2c-4b7c-97d2-62d4875615e5",
			"name": "Accounts",
			"description": "Gives access to account information",
			"protocol": "openid-connect",
			"attributes": {
				"include.in.token.scope": "true",
				"display.on.consent.screen": "true",
				"gui.order": "1",
				"consent.screen.text": "Hulk is asking for permission to access your Account information including:\n- Basic Info (Full name, Emails, Phone Numbers)\n- Bank Account Info (Account ID, IBAN, Account Type)"
			}
		},
		{
			"id": "0152f0cf-82d9-4f97-a587-c9536ac8cee7",
			"name": "role_list",
			"description": "SAML role list",
			"protocol": "saml",
			"attributes": {
				"consent.screen.text": "${samlRoleListScopeConsentText}",
				"display.on.consent.screen": "true"
			},
			"protocolMappers": [
				{
					"id": "dfa1ce11-bfc3-4916-bfdd-6f55ee1ea6ea",
					"name": "role list",
					"protocol": "saml",
					"protocolMapper": "saml-role-list-mapper",
					"consentRequired": false,
					"config": {
						"single": "false",
						"attribute.nameformat": "Basic",
						"attribute.name": "Role"
					}
				}
			]
		},
		{
			"id": "333f80b7-232e-4301-adf1-ade145bf89fd",
			"name": "web-origins",
			"description": "OpenID Connect scope for add allowed web origins to the access token",
			"protocol": "openid-connect",
			"attributes": {
				"include.in.token.scope": "false",
				"display.on.consent.screen": "false",
				"consent.screen.text": ""
			},
			"protocolMappers": [
				{
					"id": "eee2c5de-c3b5-4e48-ac47-e9f06335126f",
					"name": "allowed web origins",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-allowed-origins-mapper",
					"consentRequired": false,
					"config": {}
				}
			]
		},
		{
			"id": "634ccefc-79cd-43c0-8b12-0477aa51f0bf",
			"name": "offline_access",
			"description": "OpenID Connect built-in scope: offline_access",
			"protocol": "openid-connect",
			"attributes": {
				"consent.screen.text": "${offlineAccessScopeConsentText}",
				"display.on.consent.screen": "true"
			}
		},
		{
			"id": "8e37dcd3-1742-4394-8d80-9d1b90e89bca",
			"name": "roles",
			"description": "OpenID Connect scope for add user roles to the access token",
			"protocol": "openid-connect",
			"attributes": {
				"include.in.token.scope": "false",
				"display.on.consent.screen": "true",
				"consent.screen.text": "${rolesScopeConsentText}"
			},
			"protocolMappers": [
				{
					"id": "5c4cdcef-df4c-4a99-a7f5-ccbe5a5f9ce7",
					"name": "realm roles",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-realm-role-mapper",
					"consentRequired": false,
					"config": {
						"user.attribute": "foo",
						"access.token.claim": "true",
						"claim.name": "realm_access.roles",
						"jsonType.label": "String",
						"multivalued": "true"
					}
				},
				{
					"id": "c0dd257f-417c-43a0-84ad-db5b54e9f17f",
					"name": "client roles",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-client-role-mapper",
					"consentRequired": false,
					"config": {
						"user.attribute": "foo",
						"access.token.claim": "true",
						"claim.name": "resource_access.${client_id}.roles",
						"jsonType.label": "String",
						"multivalued": "true"
					}
				},
				{
					"id": "17b2a83b-dea7-4b5a-956b-eae9cdb913c3",
					"name": "audience resolve",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-audience-resolve-mapper",
					"consentRequired": false,
					"config": {}
				}
			]
		},
		{
			"id": "316cddf1-ee6d-4819-8efa-d57abba22bfd",
			"name": "address",
			"description": "OpenID Connect built-in scope: address",
			"protocol": "openid-connect",
			"attributes": {
				"include.in.token.scope": "true",
				"display.on.consent.screen": "true",
				"consent.screen.text": "${addressScopeConsentText}"
			},
			"protocolMappers": [
				{
					"id": "d2e30e0b-da70-483b-bc2e-48414cc053f2",
					"name": "address",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-address-mapper",
					"consentRequired": false,
					"config": {
						"user.attribute.formatted": "formatted",
						"user.attribute.country": "country",
						"user.attribute.postal_code": "postal_code",
						"userinfo.token.claim": "true",
						"user.attribute.street": "street",
						"id.token.claim": "true",
						"user.attribute.region": "region",
						"access.token.claim": "true",
						"user.attribute.locality": "locality"
					}
				}
			]
		}
	],
	"defaultDefaultClientScopes": [
		"role_list",
		"web-origins",
		"acr",
		"email",
		"profile",
		"roles"
	],
	"defaultOptionalClientScopes": [
		"address",
		"Accounts",
		"offline_access",
		"phone",
		"microprofile-jwt"
	],
	"browserSecurityHeaders": {
		"contentSecurityPolicyReportOnly": "",
		"xContentTypeOptions": "nosniff",
		"xRobotsTag": "none",
		"xFrameOptions": "SAMEORIGIN",
		"xXSSProtection": "1; mode=block",
		"contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
		"strictTransportSecurity": "max-age=31536000; includeSubDomains"
	},
	"smtpServer": {},
	"eventsEnabled": false,
	"eventsListeners": ["jboss-logging"],
	"enabledEventTypes": [],
	"adminEventsEnabled": false,
	"adminEventsDetailsEnabled": false,
	"identityProviders": [],
	"identityProviderMappers": [],
	"components": {
		"org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
			{
				"id": "b85248ef-cb5c-4d86-ad25-401b3aaa9e93",
				"name": "Consent Required",
				"providerId": "consent-required",
				"subType": "anonymous",
				"subComponents": {},
				"config": {}
			},
			{
				"id": "63df5759-fec5-48b9-82e7-fac481bd116e",
				"name": "Max Clients Limit",
				"providerId": "max-clients",
				"subType": "anonymous",
				"subComponents": {},
				"config": {
					"max-clients": ["200"]
				}
			},
			{
				"id": "30b960c3-0e3a-4812-9117-a7a8ef2fa7f7",
				"name": "Allowed Protocol Mapper Types",
				"providerId": "allowed-protocol-mappers",
				"subType": "anonymous",
				"subComponents": {},
				"config": {
					"allowed-protocol-mapper-types": [
						"saml-user-attribute-mapper",
						"saml-user-property-mapper",
						"oidc-full-name-mapper",
						"oidc-usermodel-property-mapper",
						"oidc-sha256-pairwise-sub-mapper",
						"oidc-usermodel-attribute-mapper",
						"oidc-address-mapper",
						"saml-role-list-mapper"
					]
				}
			},
			{
				"id": "6a42702f-a14d-440b-8f1a-65b4ad19a210",
				"name": "Allowed Protocol Mapper Types",
				"providerId": "allowed-protocol-mappers",
				"subType": "authenticated",
				"subComponents": {},
				"config": {
					"allowed-protocol-mapper-types": [
						"oidc-full-name-mapper",
						"oidc-usermodel-attribute-mapper",
						"oidc-address-mapper",
						"saml-user-property-mapper",
						"saml-role-list-mapper",
						"oidc-usermodel-property-mapper",
						"saml-user-attribute-mapper",
						"oidc-sha256-pairwise-sub-mapper"
					]
				}
			},
			{
				"id": "bfd13b92-1634-40ee-8d33-0ee2801ab8b0",
				"name": "Allowed Client Scopes",
				"providerId": "allowed-client-templates",
				"subType": "authenticated",
				"subComponents": {},
				"config": {
					"allow-default-scopes": ["true"]
				}
			},
			{
				"id": "3739f8ab-49fb-4811-a6ad-c340645f4b11",
				"name": "Trusted Hosts",
				"providerId": "trusted-hosts",
				"subType": "anonymous",
				"subComponents": {},
				"config": {
					"host-sending-registration-request-must-match": ["true"],
					"client-uris-must-match": ["true"]
				}
			},
			{
				"id": "c2874c58-36f3-4a27-a673-977758de7bbd",
				"name": "Full Scope Disabled",
				"providerId": "scope",
				"subType": "anonymous",
				"subComponents": {},
				"config": {}
			},
			{
				"id": "060cec81-1914-43c0-9c54-bff3ba56c1d0",
				"name": "Allowed Client Scopes",
				"providerId": "allowed-client-templates",
				"subType": "anonymous",
				"subComponents": {},
				"config": {
					"allow-default-scopes": ["true"]
				}
			}
		],
		"org.keycloak.keys.KeyProvider": [
			{
				"id": "970c852a-4ca8-4a5d-bf67-dd9c679ab28c",
				"name": "aes-generated",
				"providerId": "aes-generated",
				"subComponents": {},
				"config": {
					"priority": ["100"]
				}
			},
			{
				"id": "e7e2d803-cb19-4a40-abc1-9468b497e8c8",
				"name": "rsa-enc-generated",
				"providerId": "rsa-enc-generated",
				"subComponents": {},
				"config": {
					"priority": ["100"],
					"algorithm": ["RSA-OAEP"]
				}
			},
			{
				"id": "1a0503ba-2692-41cb-978c-f15224b7d82d",
				"name": "rsa-generated",
				"providerId": "rsa-generated",
				"subComponents": {},
				"config": {
					"priority": ["100"]
				}
			},
			{
				"id": "66c760df-4ca9-4dbb-b215-7d59687af9aa",
				"name": "hmac-generated",
				"providerId": "hmac-generated",
				"subComponents": {},
				"config": {
					"priority": ["100"],
					"algorithm": ["HS256"]
				}
			}
		]
	},
	"internationalizationEnabled": false,
	"supportedLocales": [],
	"authenticationFlows": [
		{
			"id": "685a7054-53e9-4233-ba00-d335f3ccbd57",
			"alias": "Account verification options",
			"description": "Method with which to verity the existing account",
			"providerId": "basic-flow",
			"topLevel": false,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "idp-email-verification",
					"authenticatorFlow": false,
					"requirement": "ALTERNATIVE",
					"priority": 10,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				},
				{
					"authenticatorFlow": true,
					"requirement": "ALTERNATIVE",
					"priority": 20,
					"autheticatorFlow": true,
					"flowAlias": "Verify Existing Account by Re-authentication",
					"userSetupAllowed": false
				}
			]
		},
		{
			"id": "1d9e5cfd-2e09-421e-bb7f-39ccd45eafa8",
			"alias": "Authentication Options",
			"description": "Authentication options.",
			"providerId": "basic-flow",
			"topLevel": false,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "basic-auth",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 10,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				},
				{
					"authenticator": "basic-auth-otp",
					"authenticatorFlow": false,
					"requirement": "DISABLED",
					"priority": 20,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				},
				{
					"authenticator": "auth-spnego",
					"authenticatorFlow": false,
					"requirement": "DISABLED",
					"priority": 30,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				}
			]
		},
		{
			"id": "82b7f075-ad4a-444a-80c5-294bab925b30",
			"alias": "Browser - Conditional OTP",
			"description": "Flow to determine if the OTP is required for the authentication",
			"providerId": "basic-flow",
			"topLevel": false,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "conditional-user-configured",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 10,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				},
				{
					"authenticator": "auth-otp-form",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 20,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				}
			]
		},
		{
			"id": "a6e142cd-3696-4844-8754-ef8b99148eae",
			"alias": "Direct Grant - Conditional OTP",
			"description": "Flow to determine if the OTP is required for the authentication",
			"providerId": "basic-flow",
			"topLevel": false,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "conditional-user-configured",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 10,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				},
				{
					"authenticator": "direct-grant-validate-otp",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 20,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				}
			]
		},
		{
			"id": "cb7eb6ec-f365-469e-99d9-522dc763a60a",
			"alias": "First broker login - Conditional OTP",
			"description": "Flow to determine if the OTP is required for the authentication",
			"providerId": "basic-flow",
			"topLevel": false,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "conditional-user-configured",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 10,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				},
				{
					"authenticator": "auth-otp-form",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 20,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				}
			]
		},
		{
			"id": "417c49e6-86e2-4a94-9e9b-e5287c7501d8",
			"alias": "Handle Existing Account",
			"description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
			"providerId": "basic-flow",
			"topLevel": false,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "idp-confirm-link",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 10,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				},
				{
					"authenticatorFlow": true,
					"requirement": "REQUIRED",
					"priority": 20,
					"autheticatorFlow": true,
					"flowAlias": "Account verification options",
					"userSetupAllowed": false
				}
			]
		},
		{
			"id": "2dab35c1-27e0-47f5-b113-8f273abb3cac",
			"alias": "Reset - Conditional OTP",
			"description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
			"providerId": "basic-flow",
			"topLevel": false,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "conditional-user-configured",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 10,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				},
				{
					"authenticator": "reset-otp",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 20,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				}
			]
		},
		{
			"id": "31fa84ab-9ef6-490a-92e8-e456e91cc265",
			"alias": "User creation or linking",
			"description": "Flow for the existing/non-existing user alternatives",
			"providerId": "basic-flow",
			"topLevel": false,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticatorConfig": "create unique user config",
					"authenticator": "idp-create-user-if-unique",
					"authenticatorFlow": false,
					"requirement": "ALTERNATIVE",
					"priority": 10,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				},
				{
					"authenticatorFlow": true,
					"requirement": "ALTERNATIVE",
					"priority": 20,
					"autheticatorFlow": true,
					"flowAlias": "Handle Existing Account",
					"userSetupAllowed": false
				}
			]
		},
		{
			"id": "01cbb9f3-6f80-4798-882d-781966251bba",
			"alias": "Verify Existing Account by Re-authentication",
			"description": "Reauthentication of existing account",
			"providerId": "basic-flow",
			"topLevel": false,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "idp-username-password-form",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 10,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				},
				{
					"authenticatorFlow": true,
					"requirement": "CONDITIONAL",
					"priority": 20,
					"autheticatorFlow": true,
					"flowAlias": "First broker login - Conditional OTP",
					"userSetupAllowed": false
				}
			]
		},
		{
			"id": "3aec312d-291f-4e9c-afa2-6435498f4e9e",
			"alias": "browser",
			"description": "browser based authentication",
			"providerId": "basic-flow",
			"topLevel": true,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "auth-cookie",
					"authenticatorFlow": false,
					"requirement": "ALTERNATIVE",
					"priority": 10,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				},
				{
					"authenticator": "auth-spnego",
					"authenticatorFlow": false,
					"requirement": "DISABLED",
					"priority": 20,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				},
				{
					"authenticator": "identity-provider-redirector",
					"authenticatorFlow": false,
					"requirement": "ALTERNATIVE",
					"priority": 25,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				},
				{
					"authenticatorFlow": true,
					"requirement": "ALTERNATIVE",
					"priority": 30,
					"autheticatorFlow": true,
					"flowAlias": "forms",
					"userSetupAllowed": false
				}
			]
		},
		{
			"id": "54d796c1-0bcf-4327-bf64-6856b7fd46e1",
			"alias": "clients",
			"description": "Base authentication for clients",
			"providerId": "client-flow",
			"topLevel": true,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "client-secret",
					"authenticatorFlow": false,
					"requirement": "ALTERNATIVE",
					"priority": 10,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				},
				{
					"authenticator": "client-jwt",
					"authenticatorFlow": false,
					"requirement": "ALTERNATIVE",
					"priority": 20,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				},
				{
					"authenticator": "client-secret-jwt",
					"authenticatorFlow": false,
					"requirement": "ALTERNATIVE",
					"priority": 30,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				},
				{
					"authenticator": "client-x509",
					"authenticatorFlow": false,
					"requirement": "ALTERNATIVE",
					"priority": 40,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				}
			]
		},
		{
			"id": "4ffc6e5b-7834-4fa3-840e-bd6696adc4d4",
			"alias": "direct grant",
			"description": "OpenID Connect Resource Owner Grant",
			"providerId": "basic-flow",
			"topLevel": true,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "direct-grant-validate-username",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 10,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				},
				{
					"authenticator": "direct-grant-validate-password",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 20,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				},
				{
					"authenticatorFlow": true,
					"requirement": "CONDITIONAL",
					"priority": 30,
					"autheticatorFlow": true,
					"flowAlias": "Direct Grant - Conditional OTP",
					"userSetupAllowed": false
				}
			]
		},
		{
			"id": "a52ad33c-8b95-43db-a733-eba5477390b2",
			"alias": "docker auth",
			"description": "Used by Docker clients to authenticate against the IDP",
			"providerId": "basic-flow",
			"topLevel": true,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "docker-http-basic-authenticator",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 10,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				}
			]
		},
		{
			"id": "dbb3e363-dcd4-4551-bcd2-08d614954d47",
			"alias": "first broker login",
			"description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
			"providerId": "basic-flow",
			"topLevel": true,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticatorConfig": "review profile config",
					"authenticator": "idp-review-profile",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 10,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				},
				{
					"authenticatorFlow": true,
					"requirement": "REQUIRED",
					"priority": 20,
					"autheticatorFlow": true,
					"flowAlias": "User creation or linking",
					"userSetupAllowed": false
				}
			]
		},
		{
			"id": "4bb7040c-bd3b-49ab-b991-d6defe19f755",
			"alias": "forms",
			"description": "Username, password, otp and other auth forms.",
			"providerId": "basic-flow",
			"topLevel": false,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "auth-username-password-form",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 10,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				},
				{
					"authenticatorFlow": true,
					"requirement": "CONDITIONAL",
					"priority": 20,
					"autheticatorFlow": true,
					"flowAlias": "Browser - Conditional OTP",
					"userSetupAllowed": false
				}
			]
		},
		{
			"id": "cad2722f-8979-4655-98d3-386fb853e47b",
			"alias": "http challenge",
			"description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
			"providerId": "basic-flow",
			"topLevel": true,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "no-cookie-redirect",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 10,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				},
				{
					"authenticatorFlow": true,
					"requirement": "REQUIRED",
					"priority": 20,
					"autheticatorFlow": true,
					"flowAlias": "Authentication Options",
					"userSetupAllowed": false
				}
			]
		},
		{
			"id": "b7f681e8-7742-412a-8471-1861c35d7959",
			"alias": "registration",
			"description": "registration flow",
			"providerId": "basic-flow",
			"topLevel": true,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "registration-page-form",
					"authenticatorFlow": true,
					"requirement": "REQUIRED",
					"priority": 10,
					"autheticatorFlow": true,
					"flowAlias": "registration form",
					"userSetupAllowed": false
				}
			]
		},
		{
			"id": "bd0a7304-0af1-4684-ad49-988d39e01c72",
			"alias": "registration form",
			"description": "registration form",
			"providerId": "form-flow",
			"topLevel": false,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "registration-user-creation",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 20,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				},
				{
					"authenticator": "registration-profile-action",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 40,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				},
				{
					"authenticator": "registration-password-action",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 50,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				},
				{
					"authenticator": "registration-recaptcha-action",
					"authenticatorFlow": false,
					"requirement": "DISABLED",
					"priority": 60,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				}
			]
		},
		{
			"id": "23410917-e3da-48e0-80e7-9f0200ec111a",
			"alias": "reset credentials",
			"description": "Reset credentials for a user if they forgot their password or something",
			"providerId": "basic-flow",
			"topLevel": true,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "reset-credentials-choose-user",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 10,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				},
				{
					"authenticator": "reset-credential-email",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 20,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				},
				{
					"authenticator": "reset-password",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 30,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				},
				{
					"authenticatorFlow": true,
					"requirement": "CONDITIONAL",
					"priority": 40,
					"autheticatorFlow": true,
					"flowAlias": "Reset - Conditional OTP",
					"userSetupAllowed": false
				}
			]
		},
		{
			"id": "fdcc7d7b-a14c-4eea-86a8-4534d66a8fe8",
			"alias": "saml ecp",
			"description": "SAML ECP Profile Authentication Flow",
			"providerId": "basic-flow",
			"topLevel": true,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "http-basic-authenticator",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 10,
					"autheticatorFlow": false,
					"userSetupAllowed": false
				}
			]
		}
	],
	"authenticatorConfig": [
		{
			"id": "08fb8171-553a-4552-973b-3872f1ecc46d",
			"alias": "create unique user config",
			"config": {
				"require.password.update.after.registration": "false"
			}
		},
		{
			"id": "45a15be1-a218-4c51-8971-dd0ada2dd738",
			"alias": "review profile config",
			"config": {
				"update.profile.on.first.login": "missing"
			}
		}
	],
	"requiredActions": [
		{
			"alias": "CONFIGURE_TOTP",
			"name": "Configure OTP",
			"providerId": "CONFIGURE_TOTP",
			"enabled": true,
			"defaultAction": false,
			"priority": 10,
			"config": {}
		},
		{
			"alias": "terms_and_conditions",
			"name": "Terms and Conditions",
			"providerId": "terms_and_conditions",
			"enabled": false,
			"defaultAction": false,
			"priority": 20,
			"config": {}
		},
		{
			"alias": "UPDATE_PASSWORD",
			"name": "Update Password",
			"providerId": "UPDATE_PASSWORD",
			"enabled": true,
			"defaultAction": false,
			"priority": 30,
			"config": {}
		},
		{
			"alias": "UPDATE_PROFILE",
			"name": "Update Profile",
			"providerId": "UPDATE_PROFILE",
			"enabled": true,
			"defaultAction": false,
			"priority": 40,
			"config": {}
		},
		{
			"alias": "VERIFY_EMAIL",
			"name": "Verify Email",
			"providerId": "VERIFY_EMAIL",
			"enabled": true,
			"defaultAction": false,
			"priority": 50,
			"config": {}
		},
		{
			"alias": "delete_account",
			"name": "Delete Account",
			"providerId": "delete_account",
			"enabled": false,
			"defaultAction": false,
			"priority": 60,
			"config": {}
		},
		{
			"alias": "update_user_locale",
			"name": "Update User Locale",
			"providerId": "update_user_locale",
			"enabled": true,
			"defaultAction": false,
			"priority": 1000,
			"config": {}
		}
	],
	"browserFlow": "browser",
	"registrationFlow": "registration",
	"directGrantFlow": "direct grant",
	"resetCredentialsFlow": "reset credentials",
	"clientAuthenticationFlow": "clients",
	"dockerAuthenticationFlow": "docker auth",
	"attributes": {
		"cibaBackchannelTokenDeliveryMode": "poll",
		"cibaExpiresIn": "120",
		"cibaAuthRequestedUserHint": "login_hint",
		"parRequestUriLifespan": "60",
		"cibaInterval": "5"
	},
	"keycloakVersion": "19.0.1",
	"userManagedAccessAllowed": false,
	"clientProfiles": {
		"profiles": []
	},
	"clientPolicies": {
		"policies": []
	}
}
