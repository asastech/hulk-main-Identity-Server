{
	"schema": {
		"description": "This route will fetch a single Application and a Client using the Application's `name` property. Only works if the individual requesting the Application owns it.",
		"summary": "Fetches an Application using its Name and an Account's ID by an Access Token.",
		"tags": ["Applications"],
		"headers": {
			"type": "object",
			"required": ["authorization"],
			"properties": {
				"authorization": {
					"type": "string",
					"pattern": "^(Bearer\\s)([a-zA-Z0-9_=]+)\\.([a-zA-Z0-9_=]+)\\.([a-zA-Z0-9_\\-\\+/=]*)"
				}
			},
			"errorMessage": {
				"required": {
					"authorization": "'authorization' header missing"
				},
				"properties": {
					"authorization": "invalid format"
				}
			}
		},
		"params": {
			"type": "object",
			"additionalProperties": false,
			"required": ["name"],
			"properties": {
				"name": {
					"type": "string",
					"pattern": "\\w+"
				}
			},
			"errorMessage": {
				"type": "invalid payload: not in the desired format",
				"required": {
					"name": "'name' is a required property"
				},
				"properties": {
					"name": "invalid format"
				},
				"additionalProperties": "invalid payload: extra fields found"
			}
		},
		"response": {
			"200": {
				"description": "Successful Fetch Application response.",
				"type": "object",
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"type": "object",
						"properties": {
							"application": {
								"type": "object",
								"properties": {
									"name": {
										"type": "string"
									},
									"client": {
										"type": "object",
										"properties": {
											"name": {
												"type": "string"
											},
											"baseUrl": {
												"type": "string",
												"format": "uri"
											},
											"secret": {
												"type": "string"
											},
											"type": {
												"type": "string",
												"enum": ["PUBLIC", "CONFIDENTIAL"]
											}
										}
									},
									"status": {
										"type": "string",
										"enum": ["ACTIVE", "INACTIVE", "DELETED"]
									},
									"createdAt": {
										"type": "string",
										"format": "date-time"
									}
								}
							}
						}
					}
				}
			},
			"4xx": {
				"description": "Failure due to bad input or auth.",
				"type": "object",
				"properties": {
					"error": {
						"type": "string",
						"default": "Bad Request"
					},
					"message": {
						"type": "string",
						"default": "Invalid input, auth, parameters etc."
					},
					"statusCode": {
						"type": "integer",
						"default": 400
					}
				}
			},
			"5xx": {
				"description": "Failure on the service side.",
				"type": "object",
				"properties": {
					"error": {
						"type": "string",
						"default": "Internal Server Error"
					},
					"message": {
						"type": "string",
						"default": "Something went wrong."
					},
					"statusCode": {
						"type": "integer",
						"default": 500
					}
				}
			}
		}
	}
}
